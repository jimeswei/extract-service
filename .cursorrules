{
    "editor": {
        "formatOnSave": true,
        "formatOnPaste": true,
        "tabSize": 4,
        "insertSpaces": true,
        "detectIndentation": true,
        "trimTrailingWhitespace": true,
        "insertFinalNewline": true
    },
    "java": {
        "format": {
            "settings": {
                "url": ".eclipse-java-google-style.xml"
            }
        },
        "completion": {
            "favoriteStaticMembers": [
                "org.junit.Assert.*",
                "org.junit.Assume.*",
                "org.junit.jupiter.api.Assertions.*",
                "org.junit.jupiter.api.Assumptions.*",
                "org.junit.jupiter.api.DynamicContainer.*",
                "org.junit.jupiter.api.DynamicTest.*"
            ]
        },
        "codeGeneration": {
            "useBlocks": true,
            "generateComments": true
        },
        "templates": {
            "typeComment": [
                "/**",
                " * ${type_name}",
                " * ",
                " * @author ${user}",
                " * @since ${date}",
                " */"
            ],
            "methodComment": [
                "/**",
                " * ${cursor}",
                " * ",
                " * @param ${param}",
                " * @return ${return}",
                " * @throws ${exception}",
                " */"
            ]
        }
    },
    "checkstyle": {
        "enabled": true,
        "configPath": "checkstyle.xml"
    },
    "pmd": {
        "enabled": true,
        "rulesets": [
            "category/java/bestpractices.xml",
            "category/java/codestyle.xml",
            "category/java/design.xml",
            "category/java/documentation.xml",
            "category/java/errorprone.xml",
            "category/java/multithreading.xml",
            "category/java/performance.xml"
        ]
    },
    "spotbugs": {
        "enabled": true
    },
    "git": {
        "enableSmartCommit": true,
        "autofetch": true,
        "confirmSync": true,
        "pruneOnFetch": true
    },
    "files": {
        "exclude": {
            "**/.git": true,
            "**/.svn": true,
            "**/.hg": true,
            "**/CVS": true,
            "**/.DS_Store": true,
            "**/Thumbs.db": true,
            "**/target": true,
            "**/.settings": true,
            "**/.classpath": true,
            "**/.project": true,
            "**/bin": true
        }
    },
    "search": {
        "exclude": {
            "**/node_modules": true,
            "**/bower_components": true,
            "**/*.code-search": true,
            "**/target": true
        }
    },
    "terminal": {
        "integrated": {
            "shell": {
                "osx": "/bin/zsh"
            }
        }
    },
    "recommendations": {
        "extensions": [
            "vscjava.vscode-java-pack",
            "redhat.java",
            "vscjava.vscode-java-debug",
            "vscjava.vscode-java-test",
            "vscjava.vscode-maven",
            "vscjava.vscode-java-dependency",
            "shengchen.vscode-checkstyle",
            "SonarSource.sonarlint-vscode"
        ]
    },
    "snippets": {
        "java": {
            "sout": {
                "prefix": "sout",
                "body": "System.out.println($1);",
                "description": "Print to standard output"
            },
            "psvm": {
                "prefix": "psvm",
                "body": [
                    "public static void main(String[] args) {",
                    "    $1",
                    "}"
                ],
                "description": "Public static void main"
            },
            "test": {
                "prefix": "test",
                "body": [
                    "@Test",
                    "public void test$1() {",
                    "    $2",
                    "}"
                ],
                "description": "Test method"
            }
        }
    },
    "customRules": {
        "naming": {
            "class": "^[A-Z][a-zA-Z0-9]*$",
            "interface": "^[A-Z][a-zA-Z0-9]*$",
            "method": "^[a-z][a-zA-Z0-9]*$",
            "variable": "^[a-z][a-zA-Z0-9]*$",
            "constant": "^[A-Z][A-Z0-9_]*$",
            "package": "^[a-z]+([.][a-z]+)*$"
        },
        "maxLineLength": 120,
        "maxMethodLength": 50,
        "maxParameters": 5,
        "maxComplexity": 15
    }
}