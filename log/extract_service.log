2025-06-24 15:26:23.328 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for conversion word [wEx]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - [wEx] is not a valid conversion word
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:171)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:149)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:137)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:366)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.datacenter.extract.ExtractServiceApplication.main(ExtractServiceApplication.java:21)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - There is no conversion class registered for conversion word [wEx]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@77192705 - [wEx] is not a valid conversion word
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:277)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:255)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:189)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 19 common frames omitted
2025-06-24 15:27:35.841 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for conversion word [wEx]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - [wEx] is not a valid conversion word
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:171)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:149)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:137)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:366)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.datacenter.extract.ExtractServiceApplication.main(ExtractServiceApplication.java:21)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:91)
	at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:53)
	at org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:58)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for composite conversion word [clr]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - Failed to create converter for [%clr] keyword
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - There is no conversion class registered for conversion word [wEx]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@62452cc9 - [wEx] is not a valid conversion word
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:277)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:255)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:81)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:61)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:189)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 24 common frames omitted
2025-06-24 15:29:52.246 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication v1.0.0 using Java 21.0.4 with PID 6712 (/Users/admin/workspace/AGENT/extract-service/target/extract-service-1.0.0.jar started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 15:29:52.247 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 15:29:52.766 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:29:52.767 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:29:52.857 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 3 JPA repository interfaces.
2025-06-24 15:29:52.867 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:29:52.868 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:29:52.876 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:29:52.877 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:29:52.877 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:29:52.877 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-06-24 15:29:53.347 [main] ERROR i.n.resolver.dns.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-06-24 15:29:53.697 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@684b26b7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@684b26b7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@684b26b7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6c75e3bc
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6c75e3bc
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@186f7434
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@186f7434
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2374452a
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2374452a
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2c5708e7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2c5708e7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2c5708e7
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4ffa078d
2025-06-24 15:29:53.698 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4ffa078d
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4e26564d
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@42238078
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@42238078
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5627b8eb
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@49fe0bcd
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3516b881
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3516b881
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3516b881
2025-06-24 15:29:53.699 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6be8ce1b
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6be8ce1b
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6be8ce1b
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@397a10df
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@397a10df
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@397a10df
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@39a865c1
2025-06-24 15:29:53.700 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@39a865c1
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@39a865c1
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@141dfcf9
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@141dfcf9
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@a7bbdbc
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@a7bbdbc
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@63eea8c4
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@63eea8c4
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63eea8c4
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@19924f15
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@621392ea
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@621392ea
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35524549
2025-06-24 15:29:53.701 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@23ec63af
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@23ec63af
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@23ec63af
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@280d6a20
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@56f72909
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71285693
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3199a202
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3199a202
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7286827b
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7286827b
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1dd64243
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2ef913a4
2025-06-24 15:29:53.702 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@520c3dcb
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@145fe8ab
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3b347439
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5d3634c8
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e67a8c0
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e67a8c0
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5960f17
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5960f17
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1d1b3620
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1d1b3620
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71e7c13f
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71e7c13f
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2295566b
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2295566b
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@174e1b99
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53a09566
2025-06-24 15:29:53.703 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c815814
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c815814
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14af73e1
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73da303e
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24068086
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@32513dea
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@32513dea
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d0e703a
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f77e065
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6f655dbd
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6f655dbd
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@546083d6
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@546083d6
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7ac1b6c0
2025-06-24 15:29:53.704 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7ac1b6c0
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7ac1b6c0
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3a751535
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3a751535
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3a751535
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7fb82f73
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2f166d61
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5896b9f5
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5896b9f5
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4ad8d36f
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4ad8d36f
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4ad8d36f
2025-06-24 15:29:53.705 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74a5bef0
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@68c4a860
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@570ed9c
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@570ed9c
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@93f15f6
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@93f15f6
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@93f15f6
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5034681f
2025-06-24 15:29:53.706 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5034681f
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dfe5dd1
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dfe5dd1
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1fe05fff
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1fe05fff
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6e017950
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6e017950
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d06801f
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d06801f
2025-06-24 15:29:53.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@727956bb
2025-06-24 15:29:53.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3dfc59c5
2025-06-24 15:29:53.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3dfc59c5
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2fea9a7b
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2aa07d80
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@69c1ea07
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5cbe72b9
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@27fc0217
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e993715
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@47eae91d
2025-06-24 15:29:53.711 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c1a74d
2025-06-24 15:29:53.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@472719df
2025-06-24 15:29:53.818 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:29:53.840 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:29:53.966 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4070c4ff
2025-06-24 15:29:53.967 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:29:53.991 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:29:53.992 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c3fcbe7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e592ef2)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@96dfcbb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34ede267)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6bf77ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51c6e775)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@372841d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c8d638a)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@117069f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77ebc9e6)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b82018) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52e92f6)
2025-06-24 15:29:54.006 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17034458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e0e0ba7)
2025-06-24 15:29:54.007 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7df5549e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@cbdc0f4)
2025-06-24 15:29:54.007 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11174bf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f0c1409)
2025-06-24 15:29:54.007 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 15:29:54.007 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 15:29:54.008 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 15:29:54.009 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:29:54.009 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:29:54.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3987a1e8
2025-06-24 15:29:54.010 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fea9a7b`
2025-06-24 15:29:54.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:29:54.012 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:29:54.014 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:29:54.015 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66130c3b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@789d8fd6]
2025-06-24 15:29:54.472 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66130c3b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3c1ef806]
2025-06-24 15:29:54.473 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c1ef806] for TypeConfiguration
2025-06-24 15:29:54.474 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:29:54.958 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 15:29:55.191 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 15:29:55.274 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 15:29:55.313 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 15:29:55.313 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 15:29:55.314 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 15:29:55.314 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 15:29:55.603 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 15:29:55.611 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 3.726 seconds (process running for 3.993)
2025-06-24 15:32:29.646 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:32:29.646 [SpringApplicationShutdownHook] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3c1ef806] for TypeConfiguration
2025-06-24 15:32:29.647 [SpringApplicationShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@504ead67] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c1ef806]
2025-06-24 15:32:29.649 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 15:32:29.655 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 15:32:35.382 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 7622 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 15:32:35.384 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 15:32:36.439 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:32:36.440 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:32:36.549 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 3 JPA repository interfaces.
2025-06-24 15:32:36.572 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:32:36.573 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:32:36.587 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:32:36.588 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:32:36.588 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:32:36.588 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-24 15:32:38.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74a74070
2025-06-24 15:32:38.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74a74070
2025-06-24 15:32:38.124 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@74a74070
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@215a0264
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@215a0264
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@45832b85
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@45832b85
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@103478b8
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@103478b8
2025-06-24 15:32:38.125 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@270f7b4d
2025-06-24 15:32:38.126 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@270f7b4d
2025-06-24 15:32:38.127 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@270f7b4d
2025-06-24 15:32:38.127 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@56b704ea
2025-06-24 15:32:38.127 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@56b704ea
2025-06-24 15:32:38.127 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@56b704ea
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ab4d2ba
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ab4d2ba
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@b81938d
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@278cb145
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@278cb145
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2aa0feb2
2025-06-24 15:32:38.128 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@351c6341
2025-06-24 15:32:38.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32069394
2025-06-24 15:32:38.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32069394
2025-06-24 15:32:38.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@32069394
2025-06-24 15:32:38.129 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:32:38.130 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bea5941
2025-06-24 15:32:38.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@bea5941
2025-06-24 15:32:38.131 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@bea5941
2025-06-24 15:32:38.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@df6f19b
2025-06-24 15:32:38.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@df6f19b
2025-06-24 15:32:38.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@df6f19b
2025-06-24 15:32:38.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d842877
2025-06-24 15:32:38.132 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d842877
2025-06-24 15:32:38.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@614cbec4
2025-06-24 15:32:38.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@614cbec4
2025-06-24 15:32:38.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3835d3fd
2025-06-24 15:32:38.133 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3835d3fd
2025-06-24 15:32:38.134 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3835d3fd
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2759749
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4efed0e0
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4efed0e0
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4ac0ed65
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:32:38.135 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@729d6ee2
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4adcc981
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aae7a
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3856d0cb
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3856d0cb
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2125535d
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2125535d
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d190639
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5f82209e
2025-06-24 15:32:38.136 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@515c732d
2025-06-24 15:32:38.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5ae87de0
2025-06-24 15:32:38.137 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1f85904a
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@514dc5f4
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@633a11eb
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@633a11eb
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7a247711
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7a247711
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@764db16c
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@764db16c
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45cb5307
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45cb5307
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c8e2850
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50ac1249
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4bf10fe1
2025-06-24 15:32:38.138 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4bf10fe1
2025-06-24 15:32:38.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@543d2ef3
2025-06-24 15:32:38.139 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@399c408c
2025-06-24 15:32:38.140 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@99223ac
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a5fab78
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4a5fab78
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77a85e76
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2cebf82f
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 15:32:38.141 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 15:32:38.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 15:32:38.142 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 15:32:38.143 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 15:32:38.144 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@10dbf660
2025-06-24 15:32:38.145 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@69ab2d6a
2025-06-24 15:32:38.146 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@505a8582
2025-06-24 15:32:38.146 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@505a8582
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18887028
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@28f8ce2e
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 15:32:38.147 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 15:32:38.148 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 15:32:38.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@301d84f6
2025-06-24 15:32:38.149 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@301d84f6
2025-06-24 15:32:38.150 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 15:32:38.153 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 15:32:38.155 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4888d1ea
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4888d1ea
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ce2029b
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@43090195
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7921a37d
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6fc28e5b
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6338afe2
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68360fb9
2025-06-24 15:32:38.159 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1c787389
2025-06-24 15:32:38.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@67b3960b
2025-06-24 15:32:38.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@415262a0
2025-06-24 15:32:38.255 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:32:38.271 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:32:38.384 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21022cbb
2025-06-24 15:32:38.386 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:32:38.417 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:32:38.417 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:32:38.433 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d2b13f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58c36104)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fc8047f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29fc83c5)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fb1948c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c39193f)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@230d013b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e225c34)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d84b088) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69c0bae6)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@220f6a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5eb041b5)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2648aa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a3333be)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13b4ee4e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f55a864)
2025-06-24 15:32:38.434 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c2edbe7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f53a31f)
2025-06-24 15:32:38.435 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 15:32:38.435 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 15:32:38.435 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 15:32:38.436 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:32:38.436 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:32:38.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@558aa1f1
2025-06-24 15:32:38.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1ce2029b`
2025-06-24 15:32:38.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:32:38.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:32:38.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:32:38.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:32:38.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:32:38.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:32:38.443 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ee1b017] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f9e6167]
2025-06-24 15:32:39.108 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ee1b017] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3bbb3c84]
2025-06-24 15:32:39.114 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3bbb3c84] for TypeConfiguration
2025-06-24 15:32:39.114 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:32:40.167 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 15:32:40.578 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 15:32:40.721 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 15:32:40.775 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 15:32:40.776 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 15:32:40.777 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 15:32:40.783 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 15:32:41.201 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 15:32:41.225 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 6.486 seconds (process running for 7.315)
2025-06-24 15:34:59.593 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 10218 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 15:34:59.595 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 15:35:00.526 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:35:00.527 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:35:00.641 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 3 JPA repository interfaces.
2025-06-24 15:35:00.662 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:35:00.663 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:35:00.675 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:35:00.676 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:35:00.676 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:35:00.676 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-24 15:35:03.568 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@215a0264
2025-06-24 15:35:03.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@215a0264
2025-06-24 15:35:03.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@215a0264
2025-06-24 15:35:03.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2aa0feb2
2025-06-24 15:35:03.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2aa0feb2
2025-06-24 15:35:03.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@351c6341
2025-06-24 15:35:03.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@351c6341
2025-06-24 15:35:03.572 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@32069394
2025-06-24 15:35:03.573 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@32069394
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@70421a08
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5dba3fdc
2025-06-24 15:35:03.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@bea5941
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@bea5941
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@614cbec4
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3835d3fd
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3835d3fd
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2759749
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4efed0e0
2025-06-24 15:35:03.575 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4ac0ed65
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4ac0ed65
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4ac0ed65
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c7c75fb
2025-06-24 15:35:03.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@729d6ee2
2025-06-24 15:35:03.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@729d6ee2
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@729d6ee2
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4adcc981
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4adcc981
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4adcc981
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73aae7a
2025-06-24 15:35:03.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@73aae7a
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73aae7a
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3856d0cb
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3856d0cb
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2125535d
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2125535d
2025-06-24 15:35:03.579 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@d190639
2025-06-24 15:35:03.580 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@d190639
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@d190639
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5f82209e
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@515c732d
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@515c732d
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5ae87de0
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1f85904a
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1f85904a
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1f85904a
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@514dc5f4
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@633a11eb
2025-06-24 15:35:03.581 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7a247711
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@764db16c
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@764db16c
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@45cb5307
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1c8e2850
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@50ac1249
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4bf10fe1
2025-06-24 15:35:03.583 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@543d2ef3
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@399c408c
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@99223ac
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@99223ac
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4a5fab78
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4a5fab78
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77a85e76
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77a85e76
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2cebf82f
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2cebf82f
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10dbf660
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69ab2d6a
2025-06-24 15:35:03.584 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@505a8582
2025-06-24 15:35:03.585 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 15:35:03.586 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 15:35:03.586 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18887028
2025-06-24 15:35:03.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28f8ce2e
2025-06-24 15:35:03.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 15:35:03.587 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 15:35:03.588 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 15:35:03.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 15:35:03.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@301d84f6
2025-06-24 15:35:03.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 15:35:03.589 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 15:35:03.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 15:35:03.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 15:35:03.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 15:35:03.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4dad2363
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@114b2414
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@57920d6c
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@57920d6c
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 15:35:03.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62cf86d6
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62cf86d6
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a6c751f
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a6c751f
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6dd2e453
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6dd2e453
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@433b1597
2025-06-24 15:35:03.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@433b1597
2025-06-24 15:35:03.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d5cd210
2025-06-24 15:35:03.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d5cd210
2025-06-24 15:35:03.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@14d18029
2025-06-24 15:35:03.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4d0b7fd5
2025-06-24 15:35:03.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d0b7fd5
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@46fa2a7e
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3d02ff64
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6f17dd06
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7977f046
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ec98ccc
2025-06-24 15:35:03.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@441aa7ae
2025-06-24 15:35:03.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1534bdc6
2025-06-24 15:35:03.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@53079ae6
2025-06-24 15:35:03.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@718ad3a6
2025-06-24 15:35:03.688 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:35:03.701 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:35:03.801 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@dd77e0d
2025-06-24 15:35:03.802 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:35:03.838 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:35:03.838 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:35:03.856 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@220f6a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5eb041b5)
2025-06-24 15:35:03.856 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2648aa1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a3333be)
2025-06-24 15:35:03.856 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13b4ee4e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f55a864)
2025-06-24 15:35:03.856 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c2edbe7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f53a31f)
2025-06-24 15:35:03.857 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ba1f425) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29d563bd)
2025-06-24 15:35:03.857 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73fe7483) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11577ab8)
2025-06-24 15:35:03.857 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5513a46b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5759edff)
2025-06-24 15:35:03.857 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5703c1fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d2be319)
2025-06-24 15:35:03.857 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35d3202b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dfd157b)
2025-06-24 15:35:03.858 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 15:35:03.858 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 15:35:03.858 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 15:35:03.859 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:35:03.859 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:35:03.861 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@27e3dc9a
2025-06-24 15:35:03.861 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@46fa2a7e`
2025-06-24 15:35:03.863 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:35:03.863 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:35:03.865 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:35:03.866 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:35:03.867 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c8e4a82] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1896299b]
2025-06-24 15:35:04.474 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c8e4a82] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@292b7a02]
2025-06-24 15:35:04.480 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@292b7a02] for TypeConfiguration
2025-06-24 15:35:04.480 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:35:05.455 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 15:35:05.850 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 15:35:06.006 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 15:35:06.065 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 15:35:06.066 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 15:35:06.070 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 15:35:06.075 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 15:35:06.527 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 15:35:06.541 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 7.589 seconds (process running for 8.458)
2025-06-24 15:35:14.002 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:35:14.006 [SpringApplicationShutdownHook] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@292b7a02] for TypeConfiguration
2025-06-24 15:35:14.006 [SpringApplicationShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3bf45579] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@292b7a02]
2025-06-24 15:35:14.008 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 15:35:14.016 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 15:46:52.221 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 11472 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 15:46:52.223 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 15:46:53.462 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:46:53.464 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:46:53.574 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 105 ms. Found 3 JPA repository interfaces.
2025-06-24 15:46:53.598 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:46:53.599 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:46:53.615 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:53.615 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:53.615 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:53.616 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-06-24 15:46:57.541 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3dea1ecc
2025-06-24 15:46:57.543 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3dea1ecc
2025-06-24 15:46:57.544 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3dea1ecc
2025-06-24 15:46:57.544 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@40d10264
2025-06-24 15:46:57.544 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@40d10264
2025-06-24 15:46:57.545 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6edd4fe2
2025-06-24 15:46:57.545 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6edd4fe2
2025-06-24 15:46:57.545 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@53918b5e
2025-06-24 15:46:57.546 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@53918b5e
2025-06-24 15:46:57.546 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5366575d
2025-06-24 15:46:57.546 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5366575d
2025-06-24 15:46:57.547 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5366575d
2025-06-24 15:46:57.547 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b6cad77
2025-06-24 15:46:57.547 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b6cad77
2025-06-24 15:46:57.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b6cad77
2025-06-24 15:46:57.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1fca53a7
2025-06-24 15:46:57.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1fca53a7
2025-06-24 15:46:57.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5f9a8ddc
2025-06-24 15:46:57.548 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1280bae3
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1280bae3
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@256a5df0
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1868ed54
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@131777e8
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@131777e8
2025-06-24 15:46:57.549 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@131777e8
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@45790cb
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@45790cb
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@45790cb
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@73a5d86c
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@73a5d86c
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@73a5d86c
2025-06-24 15:46:57.550 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2cf88901
2025-06-24 15:46:57.551 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2cf88901
2025-06-24 15:46:57.551 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2cf88901
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4780341
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4780341
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4780341
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c910acd
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c910acd
2025-06-24 15:46:57.552 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@612ac38b
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@612ac38b
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@9f2fe2e
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@9f2fe2e
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@9f2fe2e
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4dd4965a
2025-06-24 15:46:57.553 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@79273a4f
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@79273a4f
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e26987b
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@50bb1c1f
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@50bb1c1f
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@50bb1c1f
2025-06-24 15:46:57.554 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@39342614
2025-06-24 15:46:57.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7981963f
2025-06-24 15:46:57.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@31e3c34
2025-06-24 15:46:57.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 15:46:57.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 15:46:57.555 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@13d10057
2025-06-24 15:46:57.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@13d10057
2025-06-24 15:46:57.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@66944c7c
2025-06-24 15:46:57.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14993306
2025-06-24 15:46:57.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73ae82da
2025-06-24 15:46:57.556 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6866e740
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2cd5b19c
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7109b603
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@76b642aa
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@76b642aa
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@29b5e7db
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@29b5e7db
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 15:46:57.557 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@687e561b
2025-06-24 15:46:57.558 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@299786b1
2025-06-24 15:46:57.559 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@75f8d9b0
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e23ee0e
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b144175
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 15:46:57.560 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 15:46:57.561 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 15:46:57.562 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@608b906d
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bccaedb
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@67784537
2025-06-24 15:46:57.563 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@17ec5e2a
2025-06-24 15:46:57.564 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@17ec5e2a
2025-06-24 15:46:57.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 15:46:57.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 15:46:57.565 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6c2dd88b
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6c2dd88b
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@49d979c4
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@49d979c4
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3cb173db
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3cb173db
2025-06-24 15:46:57.566 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 15:46:57.567 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 15:46:57.568 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 15:46:57.570 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 15:46:57.571 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@268f0ff3
2025-06-24 15:46:57.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3df3410a
2025-06-24 15:46:57.574 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3df3410a
2025-06-24 15:46:57.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2633d09c
2025-06-24 15:46:57.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@54f25b42
2025-06-24 15:46:57.576 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@521c67f0
2025-06-24 15:46:57.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7d156f8f
2025-06-24 15:46:57.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@451af781
2025-06-24 15:46:57.577 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3749c2b
2025-06-24 15:46:57.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32e65852
2025-06-24 15:46:57.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@64d93096
2025-06-24 15:46:57.578 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@76ed7573
2025-06-24 15:46:57.661 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:46:57.673 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:46:57.761 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d43f1c9
2025-06-24 15:46:57.762 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:46:57.795 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:46:57.795 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:46:57.811 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d33e72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26a202ae)
2025-06-24 15:46:57.811 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46bdc55e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e12f38c)
2025-06-24 15:46:57.811 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c1a63f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a9baba8)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72240290) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b5311cb)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34e9de8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33a8f553)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61ca5134) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7204d98f)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8636cf4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9512c6)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f65af91) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b79df53)
2025-06-24 15:46:57.812 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8ee1404) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3924fd)
2025-06-24 15:46:57.813 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 15:46:57.813 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 15:46:57.814 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 15:46:57.814 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:46:57.815 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 15:46:57.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6787bd41
2025-06-24 15:46:57.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2633d09c`
2025-06-24 15:46:57.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:46:57.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 15:46:57.820 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:46:57.820 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:46:57.820 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 15:46:57.820 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:46:57.821 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:46:57.821 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 15:46:57.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:46:57.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:46:57.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 15:46:57.822 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1adf387e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72b53f27]
2025-06-24 15:46:58.421 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1adf387e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@247877f3]
2025-06-24 15:46:58.427 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@247877f3] for TypeConfiguration
2025-06-24 15:46:58.428 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:46:59.234 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 15:46:59.563 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 15:46:59.709 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 15:46:59.743 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 15:46:59.744 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 15:46:59.747 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 15:46:59.749 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 15:47:00.116 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 15:47:00.129 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 8.504 seconds (process running for 9.123)
2025-06-24 15:47:30.000 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 15:47:30.006 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 15:47:30.034 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 15:47:30.035 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 15:47:30.047 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 0
2025-06-24 15:47:30.050 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Batch extract request failed - empty texts list
2025-06-24 15:47:30.059 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: null, textLength: 0
2025-06-24 15:47:30.060 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Social extract request failed - empty text content
2025-06-24 15:47:30.070 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: false, textLength: 46
2025-06-24 15:47:42.726 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 405
2025-06-24 15:47:42.759 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 571
2025-06-24 15:47:42.760 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "结婚",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.90
    }
  ]
}
2025-06-24 15:47:42.760 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "结婚",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.90
    }
  ]
}
2025-06-24 15:47:42.765 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 15:47:42.766 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 5 个三元组
2025-06-24 15:47:42.847 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.892 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:42.903 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 马云 (通过三元组提取)
2025-06-24 15:47:42.903 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[创始人]--> 阿里巴巴
2025-06-24 15:47:42.906 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.910 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 15:47:42.910 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 彭蕾
2025-06-24 15:47:42.912 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.916 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 15:47:42.916 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 蔡崇信
2025-06-24 15:47:42.917 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.919 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 15:47:42.919 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.921 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:42.925 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 张瑛 (通过三元组提取)
2025-06-24 15:47:42.925 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[结婚]--> 张瑛
2025-06-24 15:47:42.926 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:42.929 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 15:47:42.929 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[育有]--> 三个孩子
2025-06-24 15:47:42.929 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 15:47:42.938 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Social extract request completed successfully in 12869ms
2025-06-24 15:47:42.967 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 3
2025-06-24 15:47:49.942 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 21
2025-06-24 15:47:49.949 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 246
2025-06-24 15:47:49.950 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "是",
      "object": "国际知名的动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "主演过",
      "object": "《醉拳》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:49.950 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "是",
      "object": "国际知名的动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "主演过",
      "object": "《醉拳》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:49.952 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 15:47:49.953 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 15:47:49.960 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:49.966 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:49.974 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 成龙 (通过三元组提取)
2025-06-24 15:47:49.974 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[是]--> 国际知名的动作演员
2025-06-24 15:47:49.976 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:49.980 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 成龙 已存在，跳过插入
2025-06-24 15:47:49.981 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:49.984 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:49.987 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 《醉拳》 (通过三元组提取)
2025-06-24 15:47:49.988 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[主演过]--> 《醉拳》
2025-06-24 15:47:49.988 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 15:47:50.034 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 24
2025-06-24 15:47:50.039 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 249
2025-06-24 15:47:50.040 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "电影《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "是",
      "object": "香港四大天王之一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:50.042 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "电影《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "是",
      "object": "香港四大天王之一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:50.044 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 15:47:50.044 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 15:47:50.045 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:50.049 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:50.052 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 刘德华 (通过三元组提取)
2025-06-24 15:47:50.053 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[出演]--> 电影《无间道》
2025-06-24 15:47:50.054 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:50.057 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 刘德华 已存在，跳过插入
2025-06-24 15:47:50.057 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[是]--> 香港四大天王之一
2025-06-24 15:47:50.058 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 15:47:50.270 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 23
2025-06-24 15:47:50.275 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 248
2025-06-24 15:47:50.275 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名的华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:50.275 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名的华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:47:50.276 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 15:47:50.276 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 15:47:50.277 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:50.280 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:50.283 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 周杰伦 (通过三元组提取)
2025-06-24 15:47:50.284 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:50.286 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:47:50.288 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 著名的华语歌手 (通过三元组提取)
2025-06-24 15:47:50.288 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[是]--> 著名的华语歌手
2025-06-24 15:47:50.290 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:47:50.292 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 15:47:50.292 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[代表作品]--> 《青花瓷》
2025-06-24 15:47:50.292 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 15:47:50.301 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Batch extract request completed successfully in 7334ms
2025-06-24 15:47:50.313 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 408
2025-06-24 15:48:52.336 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 402
2025-06-24 15:49:22.363 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 408
2025-06-24 15:49:22.363 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:49:22.364 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92051ms
2025-06-24 15:49:54.348 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 331
2025-06-24 15:50:24.364 [ForkJoinPool.commonPool-worker-3] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 402
2025-06-24 15:50:24.372 [ForkJoinPool.commonPool-worker-3] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:50:24.376 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92040ms
2025-06-24 15:50:56.354 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 442
2025-06-24 15:51:26.385 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 331
2025-06-24 15:51:26.392 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:51:26.393 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92045ms
2025-06-24 15:51:58.365 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 461
2025-06-24 15:52:28.395 [ForkJoinPool.commonPool-worker-3] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 442
2025-06-24 15:52:28.402 [ForkJoinPool.commonPool-worker-3] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:52:28.404 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92051ms
2025-06-24 15:53:00.374 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 400
2025-06-24 15:53:30.398 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 461
2025-06-24 15:53:30.399 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:53:30.400 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92035ms
2025-06-24 15:54:00.932 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 400
2025-06-24 15:54:00.951 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 1638
2025-06-24 15:54:00.951 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "《奔跑吧》",
      "predicate": "是",
      "object": "浙江卫视推出的户外竞技真人秀节目",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "开播时间",
      "object": "2014年",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "制作单位",
      "object": "浙江卫视节目中心",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "总导演",
      "object": "姚译添",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "执行导演",
      "object": "刘在石",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "固定成员",
      "object": "邓超、Angelababy（杨颖）、李晨、陈赫、郑恺、王祖蓝、包贝尔等",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "邀请嘉宾",
      "object": "范冰冰、黄晓明、赵丽颖、迪丽热巴、鹿晗、易烊千玺等",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "拍摄地点",
      "object": "北京、上海、杭州、成都、青岛、厦门、长沙等城市",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "获奖",
      "object": "国家广播电视总局优秀节目奖（2016年）",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "获奖",
      "object": "亚洲电视节最佳综艺节目奖（2017年）",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "首播平台",
      "object": "浙江卫视",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "网络独播平台",
      "object": "爱奇艺、优酷、腾讯视频",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "收视率",
      "object": "长期位居同时段第一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:54:00.952 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "《奔跑吧》",
      "predicate": "是",
      "object": "浙江卫视推出的户外竞技真人秀节目",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "开播时间",
      "object": "2014年",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "制作单位",
      "object": "浙江卫视节目中心",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "总导演",
      "object": "姚译添",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "执行导演",
      "object": "刘在石",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "固定成员",
      "object": "邓超、Angelababy（杨颖）、李晨、陈赫、郑恺、王祖蓝、包贝尔等",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "邀请嘉宾",
      "object": "范冰冰、黄晓明、赵丽颖、迪丽热巴、鹿晗、易烊千玺等",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "拍摄地点",
      "object": "北京、上海、杭州、成都、青岛、厦门、长沙等城市",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "获奖",
      "object": "国家广播电视总局优秀节目奖（2016年）",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "获奖",
      "object": "亚洲电视节最佳综艺节目奖（2017年）",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "首播平台",
      "object": "浙江卫视",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "网络独播平台",
      "object": "爱奇艺、优酷、腾讯视频",
      "confidence": 0.95
    },
    {
      "subject": "《奔跑吧》",
      "predicate": "收视率",
      "object": "长期位居同时段第一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 15:54:00.957 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 15:54:00.957 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 处理 13 个三元组
2025-06-24 15:54:00.977 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:00.992 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        work
        (awards, baike, description, `group`, platform, release_date, role, title, work_id, work_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:54:00.998 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存作品: 《奔跑吧》 (通过三元组提取)
2025-06-24 15:54:00.998 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[是]--> 浙江卫视推出的户外竞技真人秀节目
2025-06-24 15:54:01.002 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.009 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.009 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[开播时间]--> 2014年
2025-06-24 15:54:01.010 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.014 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.014 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[制作单位]--> 浙江卫视节目中心
2025-06-24 15:54:01.015 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:54:01.019 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:54:01.021 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 《奔跑吧》 (通过三元组提取)
2025-06-24 15:54:01.022 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:54:01.027 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:54:01.029 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 姚译添 (通过三元组提取)
2025-06-24 15:54:01.029 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[总导演]--> 姚译添
2025-06-24 15:54:01.030 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:54:01.032 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.033 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:54:01.036 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:54:01.037 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 刘在石 (通过三元组提取)
2025-06-24 15:54:01.037 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[执行导演]--> 刘在石
2025-06-24 15:54:01.039 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.041 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.041 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[固定成员]--> 邓超、Angelababy（杨颖）、李晨、陈赫、郑恺、王祖蓝、包贝尔等
2025-06-24 15:54:01.042 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.044 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.045 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 15:54:01.047 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 15:54:01.048 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 范冰冰、黄晓明、赵丽颖、迪丽热巴、鹿晗、易烊千玺等 (通过三元组提取)
2025-06-24 15:54:01.048 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[邀请嘉宾]--> 范冰冰、黄晓明、赵丽颖、迪丽热巴、鹿晗、易烊千玺等
2025-06-24 15:54:01.050 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.052 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.052 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[拍摄地点]--> 北京、上海、杭州、成都、青岛、厦门、长沙等城市
2025-06-24 15:54:01.053 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.054 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.055 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[获奖]--> 国家广播电视总局优秀节目奖（2016年）
2025-06-24 15:54:01.056 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.057 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.057 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[获奖]--> 亚洲电视节最佳综艺节目奖（2017年）
2025-06-24 15:54:01.059 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.060 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.060 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[首播平台]--> 浙江卫视
2025-06-24 15:54:01.061 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.062 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.062 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[网络独播平台]--> 爱奇艺、优酷、腾讯视频
2025-06-24 15:54:01.063 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        w1_0.id 
    from
        work w1_0 
    where
        w1_0.title=? 
    limit
        ?
2025-06-24 15:54:01.064 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 作品 《奔跑吧》 已存在，跳过插入
2025-06-24 15:54:01.064 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 《奔跑吧》 --[收视率]--> 长期位居同时段第一
2025-06-24 15:54:01.064 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 15:54:01.068 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 60696ms
2025-06-24 15:54:02.377 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 465
2025-06-24 15:55:04.386 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 489
2025-06-24 15:55:34.401 [ForkJoinPool.commonPool-worker-3] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 465
2025-06-24 15:55:34.401 [ForkJoinPool.commonPool-worker-3] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:55:34.402 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92025ms
2025-06-24 15:56:06.385 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 404
2025-06-24 15:56:36.410 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 489
2025-06-24 15:56:36.411 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:56:36.411 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92025ms
2025-06-24 15:57:08.396 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 346
2025-06-24 15:57:38.414 [ForkJoinPool.commonPool-worker-3] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 404
2025-06-24 15:57:38.415 [ForkJoinPool.commonPool-worker-3] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:57:38.416 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92031ms
2025-06-24 15:58:40.428 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 346
2025-06-24 15:58:40.428 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 15:58:40.429 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92033ms
2025-06-24 16:00:12.394 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 22
2025-06-24 16:00:21.447 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 22
2025-06-24 16:00:21.454 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 352
2025-06-24 16:00:21.455 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "与",
      "object": "昆凌结婚",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "育有",
      "object": "两个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:00:21.455 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "与",
      "object": "昆凌结婚",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "育有",
      "object": "两个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:00:21.457 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:00:21.457 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 处理 3 个三元组
2025-06-24 16:00:21.461 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:00:21.466 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:00:21.467 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[是]--> 著名歌手
2025-06-24 16:00:21.468 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:00:21.472 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:00:21.472 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[与]--> 昆凌结婚
2025-06-24 16:00:21.473 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:00:21.475 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:00:21.475 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[育有]--> 两个孩子
2025-06-24 16:00:21.475 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:00:21.479 [ForkJoinPool.commonPool-worker-3] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 9085ms
2025-06-24 16:04:03.272 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 16:04:03.274 [ForkJoinPool.commonPool-worker-6] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 16:04:03.278 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 16:04:03.278 [ForkJoinPool.commonPool-worker-6] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 16:04:03.282 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 0
2025-06-24 16:04:03.282 [ForkJoinPool.commonPool-worker-6] WARN  c.datacenter.extract.controller.ExtractController - Batch extract request failed - empty texts list
2025-06-24 16:04:03.285 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: null, textLength: 0
2025-06-24 16:04:03.285 [ForkJoinPool.commonPool-worker-6] WARN  c.datacenter.extract.controller.ExtractController - Social extract request failed - empty text content
2025-06-24 16:04:03.292 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: false, textLength: 46
2025-06-24 16:04:03.295 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 571
2025-06-24 16:04:03.295 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "结婚",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.90
    }
  ]
}
2025-06-24 16:04:03.295 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.90
    },
    {
      "subject": "马云",
      "predicate": "结婚",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.90
    }
  ]
}
2025-06-24 16:04:03.296 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:04:03.296 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 处理 5 个三元组
2025-06-24 16:04:03.298 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.301 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:04:03.301 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[创始人]--> 阿里巴巴
2025-06-24 16:04:03.302 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.304 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:04:03.305 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 彭蕾
2025-06-24 16:04:03.306 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.309 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:04:03.309 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 蔡崇信
2025-06-24 16:04:03.310 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.312 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:04:03.313 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.316 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 张瑛 已存在，跳过插入
2025-06-24 16:04:03.316 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[结婚]--> 张瑛
2025-06-24 16:04:03.317 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.318 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:04:03.318 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[育有]--> 三个孩子
2025-06-24 16:04:03.318 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:04:03.321 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Social extract request completed successfully in 28ms
2025-06-24 16:04:03.328 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 3
2025-06-24 16:04:03.331 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 246
2025-06-24 16:04:03.332 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "是",
      "object": "国际知名的动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "主演过",
      "object": "《醉拳》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.332 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "是",
      "object": "国际知名的动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "主演过",
      "object": "《醉拳》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.332 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:04:03.332 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:04:03.333 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.333 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 249
2025-06-24 16:04:03.333 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "电影《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "是",
      "object": "香港四大天王之一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.333 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "电影《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "是",
      "object": "香港四大天王之一",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.334 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:04:03.334 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:04:03.334 [ForkJoinPool.commonPool-worker-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.334 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 成龙 已存在，跳过插入
2025-06-24 16:04:03.335 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[是]--> 国际知名的动作演员
2025-06-24 16:04:03.335 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 248
2025-06-24 16:04:03.335 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名的华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.335 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "是",
      "object": "著名的华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:04:03.336 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.337 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 人员 刘德华 已存在，跳过插入
2025-06-24 16:04:03.338 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[出演]--> 电影《无间道》
2025-06-24 16:04:03.339 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 成龙 已存在，跳过插入
2025-06-24 16:04:03.339 [ForkJoinPool.commonPool-worker-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 人员 刘德华 已存在，跳过插入
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[是]--> 香港四大天王之一
2025-06-24 16:04:03.340 [ForkJoinPool.commonPool-worker-8] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:04:03.341 [ForkJoinPool.commonPool-worker-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.341 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 人员 《醉拳》 已存在，跳过插入
2025-06-24 16:04:03.341 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[主演过]--> 《醉拳》
2025-06-24 16:04:03.341 [ForkJoinPool.commonPool-worker-6] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:04:03.342 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:04:03.343 [ForkJoinPool.commonPool-worker-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.344 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 人员 著名的华语歌手 已存在，跳过插入
2025-06-24 16:04:03.344 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[是]--> 著名的华语歌手
2025-06-24 16:04:03.344 [ForkJoinPool.commonPool-worker-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:04:03.348 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:04:03.348 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[代表作品]--> 《青花瓷》
2025-06-24 16:04:03.348 [ForkJoinPool.commonPool-worker-7] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:04:03.349 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Batch extract request completed successfully in 22ms
2025-06-24 16:04:03.354 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 408
2025-06-24 16:05:35.380 [ForkJoinPool.commonPool-worker-6] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 408
2025-06-24 16:05:35.381 [ForkJoinPool.commonPool-worker-6] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:05:35.382 [ForkJoinPool.commonPool-worker-6] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 92028ms
2025-06-24 16:09:50.939 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication v1.0.0 using Java 21.0.4 with PID 16093 (/Users/admin/workspace/AGENT/extract-service/target/extract-service-1.0.0.jar started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 16:09:50.941 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 16:09:51.474 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:09:51.476 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 16:09:51.579 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 99 ms. Found 3 JPA repository interfaces.
2025-06-24 16:09:51.590 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:09:51.591 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 16:09:51.599 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:09:51.599 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:09:51.599 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:09:51.599 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-06-24 16:09:52.078 [main] ERROR i.n.resolver.dns.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-06-24 16:09:52.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 16:09:52.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e3c36d
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3199a202
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3199a202
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7286827b
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7286827b
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1dd64243
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1dd64243
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2ef913a4
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2ef913a4
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2ef913a4
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@520c3dcb
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@520c3dcb
2025-06-24 16:09:52.453 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@520c3dcb
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@145fe8ab
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@145fe8ab
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3b347439
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d3634c8
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d3634c8
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e67a8c0
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5960f17
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1d1b3620
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1d1b3620
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d1b3620
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@71e7c13f
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@71e7c13f
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@71e7c13f
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2295566b
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2295566b
2025-06-24 16:09:52.454 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2295566b
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@174e1b99
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@174e1b99
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@174e1b99
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@53a09566
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@53a09566
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@53a09566
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c815814
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c815814
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@14af73e1
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@14af73e1
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@73da303e
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@73da303e
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73da303e
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@24068086
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@32513dea
2025-06-24 16:09:52.455 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@32513dea
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5d0e703a
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f77e065
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f77e065
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f77e065
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6f655dbd
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@546083d6
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7ac1b6c0
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a751535
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a751535
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7fb82f73
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7fb82f73
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2f166d61
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5896b9f5
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4ad8d36f
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@74a5bef0
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@68c4a860
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@570ed9c
2025-06-24 16:09:52.456 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@93f15f6
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@93f15f6
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5034681f
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5034681f
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1dfe5dd1
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1dfe5dd1
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1fe05fff
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1fe05fff
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6e017950
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6e017950
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d06801f
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@727956bb
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6ffbf0ac
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6ffbf0ac
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ad5cffa
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@237aa0c7
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b8ee69d
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2b400bd0
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2b400bd0
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@fceab5d
2025-06-24 16:09:52.457 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79445efb
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1592e540
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1592e540
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3e2772a9
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3e2772a9
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4449b273
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4449b273
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4449b273
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1fa18f87
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1fa18f87
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1fa18f87
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1d9bd1d6
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@18ac4af6
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@117fb9ba
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@117fb9ba
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b1d1a5
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b1d1a5
2025-06-24 16:09:52.458 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b1d1a5
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@41e7a544
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b66ac74
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@573870cb
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@573870cb
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5b88af70
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5b88af70
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5b88af70
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2739ecc0
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2739ecc0
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2932e15f
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2932e15f
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3d98729a
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3d98729a
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2375a976
2025-06-24 16:09:52.459 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2375a976
2025-06-24 16:09:52.460 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4bc21e34
2025-06-24 16:09:52.460 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4bc21e34
2025-06-24 16:09:52.460 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7544260a
2025-06-24 16:09:52.463 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@33891646
2025-06-24 16:09:52.463 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33891646
2025-06-24 16:09:52.463 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@a63643e
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@43294e9b
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@26d24d7a
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5a78b52b
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4bab78ce
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42ffbab6
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@69bca406
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@79c1ccf7
2025-06-24 16:09:52.464 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4654e373
2025-06-24 16:09:52.560 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 16:09:52.576 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 16:09:52.688 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6dc2e473
2025-06-24 16:09:52.689 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 16:09:52.714 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 16:09:52.715 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b9ed99d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39b95a80)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ec62141) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@402c9a60)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d43f1c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eddc9bb)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11e3d08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25c548d1)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@476a2819) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@279ab15e)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@571c2ed8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5810772a)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4eacb6d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ccefe1b)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a926db4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51e0f2eb)
2025-06-24 16:09:52.730 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a51dc38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31a4db4f)
2025-06-24 16:09:52.731 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 16:09:52.731 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 16:09:52.731 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 16:09:52.732 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:09:52.732 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:09:52.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7c8689e
2025-06-24 16:09:52.734 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@a63643e`
2025-06-24 16:09:52.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:09:52.736 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:09:52.737 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:09:52.738 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:09:52.739 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dfec221] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e9cb95]
2025-06-24 16:09:53.202 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dfec221] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@627cb3ed]
2025-06-24 16:09:53.203 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@627cb3ed] for TypeConfiguration
2025-06-24 16:09:53.203 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:09:53.580 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 16:09:53.870 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 16:09:53.961 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 16:09:53.999 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 16:09:53.999 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 16:09:54.000 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 16:09:54.000 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 16:09:54.271 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 16:09:54.283 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 3.702 seconds (process running for 4.07)
2025-06-24 16:10:04.125 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 40
2025-06-24 16:10:04.126 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 40，当前并发数: 1
2025-06-24 16:10:04.127 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:10:21.447 [reactor-http-nio-5] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 17320ms，响应长度: 573
2025-06-24 16:10:21.448 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 40
2025-06-24 16:10:21.460 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 573
2025-06-24 16:10:21.460 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "张艺谋",
      "predicate": "职业",
      "object": "导演",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "执导",
      "object": "《红高粱》",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "执导",
      "object": "《英雄》",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "配偶",
      "object": "陈婷",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:10:21.460 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "张艺谋",
      "predicate": "职业",
      "object": "导演",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "执导",
      "object": "《红高粱》",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "执导",
      "object": "《英雄》",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "配偶",
      "object": "陈婷",
      "confidence": 0.95
    },
    {
      "subject": "张艺谋",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:10:21.461 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:10:21.461 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 5 个三元组
2025-06-24 16:10:21.528 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:10:21.550 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 16:10:21.562 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 张艺谋 (通过三元组提取)
2025-06-24 16:10:21.565 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:10:21.568 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 16:10:21.570 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 导演 (通过三元组提取)
2025-06-24 16:10:21.570 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张艺谋 --[职业]--> 导演
2025-06-24 16:10:21.570 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张艺谋 --[执导]--> 《红高粱》
2025-06-24 16:10:21.570 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张艺谋 --[执导]--> 《英雄》
2025-06-24 16:10:21.571 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张艺谋 --[配偶]--> 陈婷
2025-06-24 16:10:21.571 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张艺谋 --[育有]--> 三个孩子
2025-06-24 16:10:21.571 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:10:21.576 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 17451ms
2025-06-24 16:10:49.372 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 16292 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 16:10:49.374 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 16:10:50.369 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:10:50.370 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 16:10:50.466 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 3 JPA repository interfaces.
2025-06-24 16:10:50.486 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:10:50.488 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 16:10:50.500 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:10:50.501 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:10:50.501 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:10:50.501 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-24 16:10:53.802 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 16:10:53.804 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 16:10:53.805 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 16:10:53.806 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:10:53.807 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@75f8d9b0
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1e23ee0e
2025-06-24 16:10:53.808 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@b144175
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:10:53.809 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:10:53.810 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:10:53.811 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:10:53.811 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:10:53.811 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:10:53.811 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:10:53.811 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:10:53.812 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:10:53.812 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@608b906d
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@608b906d
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5bccaedb
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@67784537
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@67784537
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@17ec5e2a
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:10:53.813 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:10:53.814 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:10:53.814 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c2dd88b
2025-06-24 16:10:53.815 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@49d979c4
2025-06-24 16:10:53.815 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3cb173db
2025-06-24 16:10:53.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 16:10:53.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 16:10:53.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 16:10:53.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 16:10:53.816 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268f0ff3
2025-06-24 16:10:53.817 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11978f52
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e0855b0
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@484b5a21
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@16e5344c
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3ba5c4dd
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@47fca3cc
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@47fca3cc
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@55746340
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@55746340
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6a0c7af6
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6a0c7af6
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f1ad846
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f1ad846
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d5ae6aa
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d5ae6aa
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2bc2e022
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2210e466
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@be1c08a
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@be1c08a
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10408ea
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d7b3b18
2025-06-24 16:10:53.818 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@186dcb05
2025-06-24 16:10:53.819 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1d0dad12
2025-06-24 16:10:53.819 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1d0dad12
2025-06-24 16:10:53.819 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6fb501
2025-06-24 16:10:53.819 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@58a8ea6f
2025-06-24 16:10:53.819 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2e6b379c
2025-06-24 16:10:53.820 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2e6b379c
2025-06-24 16:10:53.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5e7e7a7e
2025-06-24 16:10:53.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5e7e7a7e
2025-06-24 16:10:53.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:10:53.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:10:53.822 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@773c7147
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5abc5854
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c3007d
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c3007d
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:10:53.823 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:10:53.824 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7296fe0b
2025-06-24 16:10:53.824 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4a5066f5
2025-06-24 16:10:53.824 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@578d472a
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@578d472a
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@54b2d002
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@54b2d002
2025-06-24 16:10:53.825 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d1c63af
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d1c63af
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2095c331
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2095c331
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3909a854
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3909a854
2025-06-24 16:10:53.826 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7b795db7
2025-06-24 16:10:53.827 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b795db7
2025-06-24 16:10:53.828 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@586486c
2025-06-24 16:10:53.830 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4a2d66e
2025-06-24 16:10:53.830 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4a2d66e
2025-06-24 16:10:53.831 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7793b55d
2025-06-24 16:10:53.831 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ac9e53c
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ac7856f
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@432f4626
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@297c3a43
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4c79ca55
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3a63d248
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3c4ad54
2025-06-24 16:10:53.832 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4b22214d
2025-06-24 16:10:53.903 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 16:10:53.914 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 16:10:54.000 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2626aa35
2025-06-24 16:10:54.001 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 16:10:54.034 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 16:10:54.036 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 16:10:54.053 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee186f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49fb693d)
2025-06-24 16:10:54.055 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38197e82) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5516ee5)
2025-06-24 16:10:54.055 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6765b6a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75c589f2)
2025-06-24 16:10:54.055 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6db04a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8f374de)
2025-06-24 16:10:54.055 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@426913c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1bba9862)
2025-06-24 16:10:54.056 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451a4187) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@565c887e)
2025-06-24 16:10:54.056 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c215642) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1317ac2c)
2025-06-24 16:10:54.056 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416c1b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@363ba634)
2025-06-24 16:10:54.056 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60fe75f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e26c308)
2025-06-24 16:10:54.057 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 16:10:54.057 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 16:10:54.057 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 16:10:54.058 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:10:54.058 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:10:54.059 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@259c6ab8
2025-06-24 16:10:54.059 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7793b55d`
2025-06-24 16:10:54.061 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:10:54.061 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:10:54.063 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:10:54.064 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:10:54.065 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:10:54.065 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:10:54.065 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3892802b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4745bcc6]
2025-06-24 16:10:54.629 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3892802b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62682ece]
2025-06-24 16:10:54.634 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@62682ece] for TypeConfiguration
2025-06-24 16:10:54.634 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:10:55.180 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 16:10:55.698 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 16:10:55.840 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 16:10:55.885 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 16:10:55.886 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 16:10:55.888 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 16:10:55.888 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 16:10:58.419 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-06-24 16:10:58.429 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:10:58.430 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@62682ece] for TypeConfiguration
2025-06-24 16:10:58.431 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@794a3410] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@62682ece]
2025-06-24 16:10:58.432 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 16:10:58.442 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 16:10:58.475 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-24 16:10:58.486 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 2701 was already in use.

Action:

Identify and stop the process that's listening on port 2701 or configure this application to listen on another port.

2025-06-24 16:11:29.286 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 16349 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 16:11:29.288 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 16:11:30.229 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:11:30.230 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 16:11:30.338 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 3 JPA repository interfaces.
2025-06-24 16:11:30.361 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:11:30.362 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 16:11:30.375 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:11:30.376 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:11:30.376 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:11:30.376 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-24 16:11:34.762 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 16:11:34.764 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 16:11:34.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4910afdf
2025-06-24 16:11:34.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77a85e76
2025-06-24 16:11:34.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77a85e76
2025-06-24 16:11:34.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2cebf82f
2025-06-24 16:11:34.765 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2cebf82f
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@34fc315d
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34f48d1
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 16:11:34.766 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@36a1fd20
2025-06-24 16:11:34.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 16:11:34.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@45f8415b
2025-06-24 16:11:34.768 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@505a8582
2025-06-24 16:11:34.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 16:11:34.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@57afe44b
2025-06-24 16:11:34.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@18887028
2025-06-24 16:11:34.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28f8ce2e
2025-06-24 16:11:34.769 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 16:11:34.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 16:11:34.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c0a3826
2025-06-24 16:11:34.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 16:11:34.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 16:11:34.770 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4af0c50
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5ffd35dd
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@311a09b2
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 16:11:34.771 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 16:11:34.772 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4cacccbf
2025-06-24 16:11:34.772 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@301d84f6
2025-06-24 16:11:34.772 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@301d84f6
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6f80cf5
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@674ed201
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4dad2363
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@114b2414
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@114b2414
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@57920d6c
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 16:11:34.773 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@465d1345
2025-06-24 16:11:34.774 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@62cf86d6
2025-06-24 16:11:34.774 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a6c751f
2025-06-24 16:11:34.775 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6dd2e453
2025-06-24 16:11:34.775 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@433b1597
2025-06-24 16:11:34.775 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@433b1597
2025-06-24 16:11:34.775 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d5cd210
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d5cd210
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14d18029
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6edb1e9c
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@75d7297d
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4e20a985
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@56e8a8a0
2025-06-24 16:11:34.776 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6071631f
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2ca132ad
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2ca132ad
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6706da3d
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6706da3d
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7438c3d5
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7438c3d5
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1fba3fd6
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1fba3fd6
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3aab42d6
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3aab42d6
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6badb08c
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5939f047
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@17332039
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@17332039
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@776e7dfb
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71418a4a
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67ecf7ed
2025-06-24 16:11:34.777 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@69d021c1
2025-06-24 16:11:34.778 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@69d021c1
2025-06-24 16:11:34.778 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d5508a5
2025-06-24 16:11:34.780 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@103bcc9f
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@106802ea
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@106802ea
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@785ef70f
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@785ef70f
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3d8bd881
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3d8bd881
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3d8bd881
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@731ab49b
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@731ab49b
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@731ab49b
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@23358740
2025-06-24 16:11:34.781 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2cdcfaa6
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4ff0706c
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4ff0706c
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6968bb65
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6968bb65
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6968bb65
2025-06-24 16:11:34.782 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@66682e8f
2025-06-24 16:11:34.783 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2d2af12e
2025-06-24 16:11:34.783 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@611587f7
2025-06-24 16:11:34.783 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@611587f7
2025-06-24 16:11:34.783 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d0abb23
2025-06-24 16:11:34.783 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d0abb23
2025-06-24 16:11:34.784 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d0abb23
2025-06-24 16:11:34.784 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ab1f85b
2025-06-24 16:11:34.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ab1f85b
2025-06-24 16:11:34.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@10e8c7a2
2025-06-24 16:11:34.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@10e8c7a2
2025-06-24 16:11:34.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5d8fd077
2025-06-24 16:11:34.785 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5d8fd077
2025-06-24 16:11:34.786 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4544ab46
2025-06-24 16:11:34.786 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4544ab46
2025-06-24 16:11:34.787 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2052f095
2025-06-24 16:11:34.788 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2052f095
2025-06-24 16:11:34.788 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76d1f6ea
2025-06-24 16:11:34.792 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3bda1f0
2025-06-24 16:11:34.792 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3bda1f0
2025-06-24 16:11:34.794 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5e62ca19
2025-06-24 16:11:34.794 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@188bf4d8
2025-06-24 16:11:34.794 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7dd7ec56
2025-06-24 16:11:34.794 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6528d339
2025-06-24 16:11:34.795 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2dd2ff87
2025-06-24 16:11:34.795 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6a38e3d1
2025-06-24 16:11:34.796 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@28cf179c
2025-06-24 16:11:34.796 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@bdda8a7
2025-06-24 16:11:34.796 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3149409c
2025-06-24 16:11:34.881 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 16:11:34.896 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 16:11:34.999 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43f7f48d
2025-06-24 16:11:35.001 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 16:11:35.030 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 16:11:35.030 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 16:11:35.047 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e02fb23) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@104392ba)
2025-06-24 16:11:35.047 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57e6d56a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c1687d1)
2025-06-24 16:11:35.047 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1504b493) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19de32cb)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7872e91f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10b2c1cf)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20a25f66) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@488279d3)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27575bcd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ed4a51)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13866865) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4891d727)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@550574cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e7113f8)
2025-06-24 16:11:35.048 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e149513) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@787a4519)
2025-06-24 16:11:35.049 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 16:11:35.049 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 16:11:35.049 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 16:11:35.050 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:11:35.050 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:11:35.051 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2f29e630
2025-06-24 16:11:35.051 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5e62ca19`
2025-06-24 16:11:35.053 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:11:35.053 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:11:35.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:11:35.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:11:35.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:11:35.056 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:11:35.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:11:35.057 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:11:35.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:11:35.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:11:35.058 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:11:35.058 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bb0fa38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@58e7f930]
2025-06-24 16:11:35.640 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bb0fa38] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@516370c1]
2025-06-24 16:11:35.646 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@516370c1] for TypeConfiguration
2025-06-24 16:11:35.646 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:11:36.465 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 16:11:36.938 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 16:11:37.113 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 16:11:37.157 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 16:11:37.157 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 16:11:37.158 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 16:11:37.159 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 16:11:39.767 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-06-24 16:11:39.777 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:11:39.778 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@516370c1] for TypeConfiguration
2025-06-24 16:11:39.778 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@61377842] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@516370c1]
2025-06-24 16:11:39.780 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 16:11:39.787 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 16:11:39.809 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-24 16:11:39.821 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 2701 was already in use.

Action:

Identify and stop the process that's listening on port 2701 or configure this application to listen on another port.

2025-06-24 16:12:23.992 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 16434 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-24 16:12:23.994 [main] INFO  com.datacenter.extract.ExtractServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-24 16:12:24.922 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:12:24.924 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 16:12:25.013 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 3 JPA repository interfaces.
2025-06-24 16:12:25.031 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 16:12:25.032 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 16:12:25.044 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.CelebrityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:12:25.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.EventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:12:25.045 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.datacenter.extract.repository.WorkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 16:12:25.045 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-24 16:12:26.422 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b4d83ac
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@286dfa20
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 16:12:26.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1468e880
2025-06-24 16:12:26.425 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 16:12:26.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@508f4bb5
2025-06-24 16:12:26.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:12:26.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:12:26.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5602e540
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@11f9b95a
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42066f0d
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@75f8d9b0
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 16:12:26.427 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f7ae05
2025-06-24 16:12:26.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1e23ee0e
2025-06-24 16:12:26.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@b144175
2025-06-24 16:12:26.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:12:26.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:12:26.429 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@38923cfe
2025-06-24 16:12:26.429 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1ac3a6f
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@fee7ca
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:12:26.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29c80149
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@14ad42
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@608b906d
2025-06-24 16:12:26.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@608b906d
2025-06-24 16:12:26.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 16:12:26.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@173cfb01
2025-06-24 16:12:26.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:12:26.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:12:26.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7e1762e6
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5bccaedb
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@67784537
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@67784537
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@17ec5e2a
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@52290e63
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c2dd88b
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@49d979c4
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3cb173db
2025-06-24 16:12:26.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26712838
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@249a45fd
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@268f0ff3
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11978f52
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e0855b0
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@484b5a21
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@16e5344c
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3ba5c4dd
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@47fca3cc
2025-06-24 16:12:26.435 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@47fca3cc
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@55746340
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@55746340
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6a0c7af6
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6a0c7af6
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f1ad846
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f1ad846
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d5ae6aa
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d5ae6aa
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2bc2e022
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2210e466
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@be1c08a
2025-06-24 16:12:26.436 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@be1c08a
2025-06-24 16:12:26.437 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10408ea
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d7b3b18
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@186dcb05
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1d0dad12
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1d0dad12
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c6fb501
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@58a8ea6f
2025-06-24 16:12:26.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2e6b379c
2025-06-24 16:12:26.439 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2e6b379c
2025-06-24 16:12:26.439 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5e7e7a7e
2025-06-24 16:12:26.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5e7e7a7e
2025-06-24 16:12:26.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:12:26.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:12:26.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ff81b0d
2025-06-24 16:12:26.440 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1c610f
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@773c7147
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5abc5854
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c3007d
2025-06-24 16:12:26.441 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c3007d
2025-06-24 16:12:26.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:12:26.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66b40dd3
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7296fe0b
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4a5066f5
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@578d472a
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@578d472a
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:12:26.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1191029d
2025-06-24 16:12:26.444 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@54b2d002
2025-06-24 16:12:26.444 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@54b2d002
2025-06-24 16:12:26.444 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d1c63af
2025-06-24 16:12:26.444 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d1c63af
2025-06-24 16:12:26.445 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2095c331
2025-06-24 16:12:26.445 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2095c331
2025-06-24 16:12:26.445 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3909a854
2025-06-24 16:12:26.445 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3909a854
2025-06-24 16:12:26.445 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7b795db7
2025-06-24 16:12:26.447 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b795db7
2025-06-24 16:12:26.448 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@586486c
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4a2d66e
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4a2d66e
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7793b55d
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ac9e53c
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ac7856f
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@432f4626
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@297c3a43
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4c79ca55
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3a63d248
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3c4ad54
2025-06-24 16:12:26.450 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4b22214d
2025-06-24 16:12:26.521 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 16:12:26.540 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 16:12:26.626 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2626aa35
2025-06-24 16:12:26.628 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 16:12:26.658 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 16:12:26.659 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 16:12:26.679 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee186f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49fb693d)
2025-06-24 16:12:26.679 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38197e82) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5516ee5)
2025-06-24 16:12:26.679 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6765b6a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75c589f2)
2025-06-24 16:12:26.680 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6db04a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8f374de)
2025-06-24 16:12:26.680 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@426913c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1bba9862)
2025-06-24 16:12:26.680 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451a4187) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@565c887e)
2025-06-24 16:12:26.680 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c215642) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1317ac2c)
2025-06-24 16:12:26.680 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416c1b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@363ba634)
2025-06-24 16:12:26.681 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60fe75f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e26c308)
2025-06-24 16:12:26.682 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-24 16:12:26.682 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-24 16:12:26.682 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-24 16:12:26.683 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:12:26.683 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-24 16:12:26.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@259c6ab8
2025-06-24 16:12:26.685 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7793b55d`
2025-06-24 16:12:26.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:12:26.687 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-24 16:12:26.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:12:26.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:12:26.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-24 16:12:26.688 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:12:26.689 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:12:26.689 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-24 16:12:26.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:12:26.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:12:26.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-24 16:12:26.690 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3892802b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4745bcc6]
2025-06-24 16:12:27.242 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3892802b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62682ece]
2025-06-24 16:12:27.247 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@62682ece] for TypeConfiguration
2025-06-24 16:12:27.248 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 16:12:27.784 [main] INFO  c.datacenter.extract.controller.ExtractController - ExtractController initialized successfully
2025-06-24 16:12:28.200 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-24 16:12:28.360 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable tools capabilities, notification: true
2025-06-24 16:12:28.398 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Registered tools: 4
2025-06-24 16:12:28.399 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable resources capabilities, notification: true
2025-06-24 16:12:28.400 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable prompts capabilities, notification: true
2025-06-24 16:12:28.400 [main] INFO  o.s.a.m.s.autoconfigure.McpServerAutoConfiguration - Enable completions capabilities
2025-06-24 16:12:28.824 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-24 16:12:28.840 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 5.399 seconds (process running for 5.955)
2025-06-24 16:14:24.049 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 16:14:24.050 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 16:14:24.056 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 0
2025-06-24 16:14:24.057 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Extract request failed - empty text content
2025-06-24 16:14:24.062 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 0
2025-06-24 16:14:24.064 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Batch extract request failed - empty texts list
2025-06-24 16:14:24.071 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: null, textLength: 0
2025-06-24 16:14:24.072 [ForkJoinPool.commonPool-worker-1] WARN  c.datacenter.extract.controller.ExtractController - Social extract request failed - empty text content
2025-06-24 16:14:24.080 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received social extract request - extractTypes: entities,relations, maskSensitive: false, textLength: 46
2025-06-24 16:14:24.082 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 405，当前并发数: 1
2025-06-24 16:14:24.083 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:14:36.279 [reactor-http-nio-5] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 12194ms，响应长度: 571
2025-06-24 16:14:36.286 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 405
2025-06-24 16:14:36.305 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 571
2025-06-24 16:14:36.305 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "配偶",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:36.306 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "马云",
      "predicate": "创始人",
      "object": "阿里巴巴",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "彭蕾",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "共同创立",
      "object": "蔡崇信",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "配偶",
      "object": "张瑛",
      "confidence": 0.95
    },
    {
      "subject": "马云",
      "predicate": "育有",
      "object": "三个孩子",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:36.307 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:14:36.307 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 5 个三元组
2025-06-24 16:14:36.382 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:36.403 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:14:36.403 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[创始人]--> 阿里巴巴
2025-06-24 16:14:36.404 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:36.408 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:14:36.408 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 彭蕾
2025-06-24 16:14:36.409 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:36.410 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:14:36.410 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[共同创立]--> 蔡崇信
2025-06-24 16:14:36.411 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:36.413 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:14:36.413 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[配偶]--> 张瑛
2025-06-24 16:14:36.414 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:36.415 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 马云 已存在，跳过插入
2025-06-24 16:14:36.415 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 马云 --[育有]--> 三个孩子
2025-06-24 16:14:36.415 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:14:36.418 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Social extract request completed successfully in 12338ms
2025-06-24 16:14:36.442 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received batch extract request - extractType: triples, textsCount: 3
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 23，当前并发数: 2
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 21，当前并发数: 1
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 24，当前并发数: 3
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:14:36.445 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:14:43.645 [reactor-http-nio-5] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 7199ms，响应长度: 239
2025-06-24 16:14:43.646 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 21
2025-06-24 16:14:43.650 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 239
2025-06-24 16:14:43.650 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "职业",
      "object": "动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "作品",
      "object": "醉拳",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:43.650 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "成龙",
      "predicate": "职业",
      "object": "动作演员",
      "confidence": 0.95
    },
    {
      "subject": "成龙",
      "predicate": "作品",
      "object": "醉拳",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:43.651 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:14:43.652 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:14:43.653 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:43.661 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 成龙 已存在，跳过插入
2025-06-24 16:14:43.662 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:43.688 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 16:14:43.703 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 动作演员 (通过三元组提取)
2025-06-24 16:14:43.704 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[职业]--> 动作演员
2025-06-24 16:14:43.708 [ForkJoinPool.commonPool-worker-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:43.714 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 成龙 已存在，跳过插入
2025-06-24 16:14:43.715 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 成龙 --[作品]--> 醉拳
2025-06-24 16:14:43.715 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:14:44.337 [reactor-http-nio-7] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 7891ms，响应长度: 246
2025-06-24 16:14:44.338 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 24
2025-06-24 16:14:44.341 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 246
2025-06-24 16:14:44.341 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "属于",
      "object": "香港四大天王",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:44.341 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "刘德华",
      "predicate": "出演",
      "object": "《无间道》",
      "confidence": 0.95
    },
    {
      "subject": "刘德华",
      "predicate": "属于",
      "object": "香港四大天王",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:44.342 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:14:44.342 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:14:44.343 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:44.345 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 刘德华 已存在，跳过插入
2025-06-24 16:14:44.345 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[出演]--> 《无间道》
2025-06-24 16:14:44.346 [ForkJoinPool.commonPool-worker-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:44.348 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 人员 刘德华 已存在，跳过插入
2025-06-24 16:14:44.349 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 刘德华 --[属于]--> 香港四大天王
2025-06-24 16:14:44.349 [ForkJoinPool.commonPool-worker-3] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:14:44.873 [reactor-http-nio-6] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 8428ms，响应长度: 246
2025-06-24 16:14:44.875 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.SmartAIProvider - AI提取成功，文本长度: 23
2025-06-24 16:14:44.884 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，数据长度: 246
2025-06-24 16:14:44.885 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "职业",
      "object": "华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:44.885 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {
  "triples": [
    {
      "subject": "周杰伦",
      "predicate": "职业",
      "object": "华语歌手",
      "confidence": 0.95
    },
    {
      "subject": "周杰伦",
      "predicate": "代表作品",
      "object": "《青花瓷》",
      "confidence": 0.95
    }
  ]
}
2025-06-24 16:14:44.885 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 1 个主要字段: [triples]
2025-06-24 16:14:44.885 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组
2025-06-24 16:14:44.887 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:44.890 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:14:44.892 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:44.896 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        celebrity
        (baike, birthdate, celebrity_id, company, education, gender, `group`, name, nationality, position, profession, relatives, resume, spouse) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-24 16:14:44.904 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功保存人员: 华语歌手 (通过三元组提取)
2025-06-24 16:14:44.904 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[职业]--> 华语歌手
2025-06-24 16:14:44.906 [ForkJoinPool.commonPool-worker-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id 
    from
        celebrity c1_0 
    where
        c1_0.name=? 
    limit
        ?
2025-06-24 16:14:44.908 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 人员 周杰伦 已存在，跳过插入
2025-06-24 16:14:44.908 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 周杰伦 --[代表作品]--> 《青花瓷》
2025-06-24 16:14:44.908 [ForkJoinPool.commonPool-worker-2] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (localhost:3306/extract-graph)
2025-06-24 16:14:44.912 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Batch extract request completed successfully in 8470ms
2025-06-24 16:14:44.922 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 408
2025-06-24 16:14:44.922 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 408，当前并发数: 1
2025-06-24 16:14:44.923 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:15:14.939 [parallel-7] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30016ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:15:14.940 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 408
2025-06-24 16:15:14.940 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:15:14.940 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30018ms
2025-06-24 16:15:16.960 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 402
2025-06-24 16:15:16.961 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 402，当前并发数: 1
2025-06-24 16:15:16.962 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:15:46.969 [parallel-11] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30006ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:15:46.970 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 402
2025-06-24 16:15:46.970 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:15:46.970 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30010ms
2025-06-24 16:15:48.990 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 331
2025-06-24 16:15:48.990 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 331，当前并发数: 1
2025-06-24 16:15:48.991 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:16:18.994 [parallel-3] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30003ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:16:18.995 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 331
2025-06-24 16:16:18.995 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:16:18.995 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30005ms
2025-06-24 16:16:21.016 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 442
2025-06-24 16:16:21.016 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 442，当前并发数: 1
2025-06-24 16:16:21.016 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:16:51.024 [parallel-7] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30008ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:16:51.024 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 442
2025-06-24 16:16:51.025 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:16:51.025 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30009ms
2025-06-24 16:16:53.043 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 461
2025-06-24 16:16:53.044 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 461，当前并发数: 1
2025-06-24 16:16:53.044 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:17:23.046 [parallel-11] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30002ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:17:23.047 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 461
2025-06-24 16:17:23.047 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:17:23.047 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30004ms
2025-06-24 16:17:25.065 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 400
2025-06-24 16:17:25.065 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 400，当前并发数: 1
2025-06-24 16:17:25.065 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:17:55.073 [parallel-5] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30007ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:17:55.080 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 400
2025-06-24 16:17:55.080 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:17:55.082 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30017ms
2025-06-24 16:17:57.112 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 465
2025-06-24 16:17:57.113 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 465，当前并发数: 1
2025-06-24 16:17:57.113 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:18:27.121 [parallel-8] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30008ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:18:27.122 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 465
2025-06-24 16:18:27.122 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:18:27.123 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30011ms
2025-06-24 16:18:29.140 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 489
2025-06-24 16:18:29.140 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 489，当前并发数: 1
2025-06-24 16:18:29.140 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:18:59.144 [parallel-12] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30004ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:18:59.144 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 489
2025-06-24 16:18:59.144 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:18:59.145 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30005ms
2025-06-24 16:19:01.168 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 404
2025-06-24 16:19:01.168 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 404，当前并发数: 1
2025-06-24 16:19:01.169 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:19:31.176 [parallel-5] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30007ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:19:31.178 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 404
2025-06-24 16:19:31.178 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:19:31.179 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30011ms
2025-06-24 16:19:33.196 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Received extract request - extractType: triples, textLength: 346
2025-06-24 16:19:33.197 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 346，当前并发数: 1
2025-06-24 16:19:33.197 [ForkJoinPool.commonPool-worker-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-24 16:20:03.205 [parallel-8] ERROR com.datacenter.extract.service.AIModelCaller - ❌ AI调用失败，耗时: 30008ms，错误: Did not observe any item or terminal signal within 30000ms in 'flatMap' (and no fallback has been configured)
2025-06-24 16:20:03.206 [ForkJoinPool.commonPool-worker-1] ERROR com.datacenter.extract.service.SmartAIProvider - AI提取失败，类型: triples，文本长度: 346
2025-06-24 16:20:03.206 [ForkJoinPool.commonPool-worker-1] ERROR c.datacenter.extract.service.TextExtractionService - 提取失败: AI提取失败，无法处理请求。请检查AI服务状态或稍后重试。
2025-06-24 16:20:03.206 [ForkJoinPool.commonPool-worker-1] INFO  c.datacenter.extract.controller.ExtractController - Extract request completed successfully in 30010ms
