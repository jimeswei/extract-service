2025-06-30 11:31:14.321 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Starting ExtractServiceApplication using Java 17.0.6 with PID 32735 (/Users/admin/workspace/AGENT/extract-service/target/classes started by admin in /Users/admin/workspace/AGENT/extract-service)
2025-06-30 11:31:14.324 [main] INFO  com.datacenter.extract.ExtractServiceApplication - The following 1 profile is active: "default"
2025-06-30 11:31:17.343 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e020dd1
2025-06-30 11:31:17.345 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e020dd1
2025-06-30 11:31:17.345 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e020dd1
2025-06-30 11:31:17.345 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@624d778e
2025-06-30 11:31:17.346 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@624d778e
2025-06-30 11:31:17.346 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@39ae6408
2025-06-30 11:31:17.347 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@39ae6408
2025-06-30 11:31:17.347 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@cfacf0
2025-06-30 11:31:17.347 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@cfacf0
2025-06-30 11:31:17.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c8abec7
2025-06-30 11:31:17.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c8abec7
2025-06-30 11:31:17.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4c8abec7
2025-06-30 11:31:17.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@45f241df
2025-06-30 11:31:17.348 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@45f241df
2025-06-30 11:31:17.349 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@45f241df
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@f36f34d
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@f36f34d
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3c2dda7c
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4b9fa2f
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4b9fa2f
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d80e411
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32caae19
2025-06-30 11:31:17.350 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@60e67c06
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@60e67c06
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@60e67c06
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2bc59ab7
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2bc59ab7
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2bc59ab7
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@410f53b2
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@410f53b2
2025-06-30 11:31:17.351 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@410f53b2
2025-06-30 11:31:17.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@265287ec
2025-06-30 11:31:17.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@265287ec
2025-06-30 11:31:17.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@265287ec
2025-06-30 11:31:17.352 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7507d96c
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7507d96c
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7507d96c
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7210f559
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7210f559
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@49b9ba6a
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@49b9ba6a
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7be62956
2025-06-30 11:31:17.353 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7be62956
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7be62956
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@30e143ff
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@452ec287
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@452ec287
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@41404aa2
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@b267745
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b267745
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@b267745
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@31e22365
2025-06-30 11:31:17.354 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2ebf524
2025-06-30 11:31:17.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@41bdaa81
2025-06-30 11:31:17.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@799971ac
2025-06-30 11:31:17.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@799971ac
2025-06-30 11:31:17.355 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59c08cf1
2025-06-30 11:31:17.357 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59c08cf1
2025-06-30 11:31:17.357 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@45f0038
2025-06-30 11:31:17.357 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@289a4b90
2025-06-30 11:31:17.358 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1a3c4b3e
2025-06-30 11:31:17.358 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4746fb8c
2025-06-30 11:31:17.358 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3be46d9c
2025-06-30 11:31:17.359 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41d877bb
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@39c5a105
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@39c5a105
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@492fa72a
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@492fa72a
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@513fab1e
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@513fab1e
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@53d87b2d
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@53d87b2d
2025-06-30 11:31:17.360 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@470135da
2025-06-30 11:31:17.361 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@470135da
2025-06-30 11:31:17.362 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7323dce7
2025-06-30 11:31:17.362 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f68eec6
2025-06-30 11:31:17.362 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4ff9f715
2025-06-30 11:31:17.362 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4ff9f715
2025-06-30 11:31:17.362 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@118a4d5
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6cb194f5
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74b7497b
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74f649a7
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74f649a7
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@308c65e0
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50fa5938
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1e482ecd
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1e482ecd
2025-06-30 11:31:17.363 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@58b5f7d2
2025-06-30 11:31:17.364 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@58b5f7d2
2025-06-30 11:31:17.364 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@bc52a41
2025-06-30 11:31:17.365 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@bc52a41
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@bc52a41
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9f48198
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9f48198
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9f48198
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5615f82d
2025-06-30 11:31:17.366 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@21698e5a
2025-06-30 11:31:17.367 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3dc2f14
2025-06-30 11:31:17.367 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3dc2f14
2025-06-30 11:31:17.367 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2e8986b6
2025-06-30 11:31:17.367 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2e8986b6
2025-06-30 11:31:17.367 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2e8986b6
2025-06-30 11:31:17.368 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5724c7da
2025-06-30 11:31:17.368 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ad2883a
2025-06-30 11:31:17.368 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5814b4fb
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5814b4fb
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3aca2579
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3aca2579
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3aca2579
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4ba13fed
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4ba13fed
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@651cedfb
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@651cedfb
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18d22ecf
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18d22ecf
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@73d83141
2025-06-30 11:31:17.369 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@73d83141
2025-06-30 11:31:17.370 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31443680
2025-06-30 11:31:17.370 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31443680
2025-06-30 11:31:17.370 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@33356666
2025-06-30 11:31:17.374 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2b80497f
2025-06-30 11:31:17.374 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2b80497f
2025-06-30 11:31:17.375 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1d5048d1
2025-06-30 11:31:17.376 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@47d9c01
2025-06-30 11:31:17.377 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5358c8fa
2025-06-30 11:31:17.377 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1a02ebe0
2025-06-30 11:31:17.378 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@58b3eb1
2025-06-30 11:31:17.380 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6d7e2795
2025-06-30 11:31:17.380 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@78743dd8
2025-06-30 11:31:17.380 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@752494dd
2025-06-30 11:31:17.380 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2986427e
2025-06-30 11:31:17.472 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-30 11:31:18.667 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@126ff1a1
2025-06-30 11:31:18.669 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-30 11:31:18.703 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30 11:31:18.704 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-30 11:31:18.719 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@306cfb8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fa57aa8)
2025-06-30 11:31:18.720 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d4bdbd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e847e71)
2025-06-30 11:31:18.720 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79636080) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d87253e)
2025-06-30 11:31:18.721 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e31b64d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434b2e0c)
2025-06-30 11:31:18.722 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@214e3185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75345e47)
2025-06-30 11:31:18.722 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36f40d72) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c557eee)
2025-06-30 11:31:18.722 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c47b0f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b561f51)
2025-06-30 11:31:18.722 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d5f08d4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3afaa39f)
2025-06-30 11:31:18.722 [main] DEBUG o.h.type.descriptor.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b7b1448) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60cc20e1)
2025-06-30 11:31:18.723 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-06-30 11:31:18.724 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-06-30 11:31:18.724 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-06-30 11:31:18.726 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-30 11:31:18.726 [main] DEBUG o.h.type.descriptor.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-06-30 11:31:18.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@331ad6eb
2025-06-30 11:31:18.728 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1d5048d1`
2025-06-30 11:31:18.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2025-06-30 11:31:18.730 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-30 11:31:18.732 [main] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-06-30 11:31:18.733 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29e3c28] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@480994d3]
2025-06-30 11:31:19.459 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29e3c28] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7f6137fb]
2025-06-30 11:31:19.463 [main] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7f6137fb] for TypeConfiguration
2025-06-30 11:31:19.517 [main] INFO  c.d.extract.controller.AsyncExtractController - AsyncExtractController initialized with enterprise-grade business service
2025-06-30 11:31:19.960 [main] INFO  c.datacenter.extract.service.EntityDisambiguator - EntityDisambiguator initialized successfully
2025-06-30 11:31:20.033 [main] INFO  com.datacenter.extract.service.KnowledgeFusion - KnowledgeFusion service initialized
2025-06-30 11:31:20.099 [main] INFO  com.datacenter.extract.service.RelationValidator - RelationValidator initialized with 6 constraint rules and database validation
2025-06-30 11:31:20.116 [main] INFO  com.datacenter.extract.service.QualityAssessor - QualityAssessor initialized successfully
2025-06-30 11:31:20.118 [main] INFO  c.datacenter.extract.service.KnowledgeGraphEngine - KnowledgeGraphEngine initialized with all processors
2025-06-30 11:31:20.156 [main] INFO  c.d.extract.service.OptimizedBusinessService - OptimizedBusinessService initialized with enterprise-grade components
2025-06-30 11:31:20.177 [main] INFO  c.d.extract.service.DataMaintenanceService - DataMaintenanceService initialized
2025-06-30 11:31:20.592 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-06-30 11:31:21.118 [main] INFO  o.s.boot.web.embedded.netty.NettyWebServer - Netty started on port 2701
2025-06-30 11:31:21.135 [main] INFO  com.datacenter.extract.ExtractServiceApplication - Started ExtractServiceApplication in 7.503 seconds (process running for 7.858)
2025-06-30 11:31:21.139 [scheduled-task-1] INFO  c.d.extract.service.DataMaintenanceService - 开始执行数据质量监控
2025-06-30 11:31:21.163 [scheduled-task-1] INFO  c.d.extract.service.DataMaintenanceService - 消歧义统计: {celebrity=0, work=0, event=0}
2025-06-30 11:31:21.178 [scheduled-task-1] INFO  c.d.extract.service.DataMaintenanceService - 知识图谱平均质量分数: 0.82
2025-06-30 11:31:21.183 [scheduled-task-1] INFO  c.d.extract.service.DataMaintenanceService - 质量等级分布: {FAIR=4, POOR=0, VERY_POOR=0, GOOD=4, EXCELLENT=2}
2025-06-30 11:32:01.316 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from celebrity c1_0
2025-06-30 11:32:01.356 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from work w1_0
2025-06-30 11:32:01.366 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from event e1_0
2025-06-30 11:32:01.377 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from celebrity_celebrity cc1_0
2025-06-30 11:32:01.397 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from celebrity_work cw1_0
2025-06-30 11:32:01.426 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from celebrity_event ce1_0
2025-06-30 11:32:01.438 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from event_work ew1_0
2025-06-30 11:32:01.463 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from celebrity c1_0
2025-06-30 11:32:01.469 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from work w1_0
2025-06-30 11:32:01.474 [reactor-http-nio-4] DEBUG org.hibernate.SQL - select count(*) from event e1_0
2025-06-30 11:32:30.026 [reactor-http-nio-6] INFO  c.d.extract.controller.AsyncExtractController - 收到提取请求，文本长度: 21, 提取参数: triples, KG模式: enhanced
2025-06-30 11:32:30.033 [TextExtract-1] INFO  c.datacenter.extract.service.TextExtractionService - 开始异步文本提取，线程: TextExtract-1, 文本长度: 21, KG模式: enhanced
2025-06-30 11:32:30.042 [TextExtract-1] INFO  com.datacenter.extract.service.SmartAIProvider - 🚀 开始AI提取，文本长度: 21 字符
2025-06-30 11:32:30.042 [TextExtract-1] INFO  com.datacenter.extract.service.SmartAIProvider - 📝 短文本，使用直接处理模式
2025-06-30 11:32:30.042 [TextExtract-1] INFO  com.datacenter.extract.service.AIModelCaller - 🎯 开始AI调用，文本长度: 21，当前并发数: 1
2025-06-30 11:32:30.042 [TextExtract-1] INFO  com.datacenter.extract.service.AIModelCaller - ⏱️  动态计算超时时间: 30秒
2025-06-30 11:32:37.021 [reactor-http-nio-8] INFO  com.datacenter.extract.service.AIModelCaller - ✅ AI调用成功，耗时: 6978ms，响应长度: 240
2025-06-30 11:32:37.022 [TextExtract-1] INFO  com.datacenter.extract.service.SmartAIProvider - ✅ AI提取成功，文本长度: 21，处理模式: 直接处理
2025-06-30 11:32:37.025 [TextExtract-1] INFO  c.datacenter.extract.service.KnowledgeGraphEngine - 开始知识图谱增强处理，模式: enhanced
2025-06-30 11:32:37.110 [TextExtract-1] INFO  c.datacenter.extract.service.EntityDisambiguator - 开始实体消歧义处理
2025-06-30 11:32:37.160 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.171 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.197 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.205 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.209 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.224 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.228 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.236 [TextExtract-1] INFO  c.datacenter.extract.service.EntityDisambiguator - 实体消歧义处理完成，处理了2个三元组
2025-06-30 11:32:37.236 [TextExtract-1] INFO  com.datacenter.extract.service.RelationValidator - 开始关系验证处理
2025-06-30 11:32:37.237 [TextExtract-1] INFO  com.datacenter.extract.service.RelationValidator - 关系验证完成，有效关系: 2, 无效关系: 0, 冲突: 0
2025-06-30 11:32:37.267 [TextExtract-1] INFO  c.datacenter.extract.service.KnowledgeGraphEngine - 知识图谱增强处理完成，模式: enhanced
2025-06-30 11:32:37.269 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 开始保存提取数据到数据库，模式: enhanced, 数据长度: 793
2025-06-30 11:32:37.269 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 原始AI返回数据: {"triples":[{"predicate":"职业","object_confidence":0.95,"subject":"张伟","disambiguation_applied":true,"confidence":0.95,"validation_status":"valid","validation_confidence":1.0,"object":"演员","subject_confidence":1.0},{"predicate":"主演","object_confidence":1.0,"subject":"张伟","disambiguation_applied":true,"confidence":0.95,"validation_status":"valid","validation_confidence":1.0,"object":"《红楼梦》","subject_confidence":1.0}],"disambiguation_applied":true,"disambiguation_timestamp":1751254357236,"validation_applied":true,"validation_timestamp":1751254357237,"invalid_relations":[],"conflicts_found":0,"validation_summary":{"conflict_count":0,"validation_rate":100.0,"valid_count":2,"total_validated":2,"invalid_count":0},"kg_mode":"enhanced","processed_at":1751254357237,"enhancement_applied":true}
2025-06-30 11:32:37.270 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 提取的JSON部分: {"triples":[{"predicate":"职业","object_confidence":0.95,"subject":"张伟","disambiguation_applied":true,"confidence":0.95,"validation_status":"valid","validation_confidence":1.0,"object":"演员","subject_confidence":1.0},{"predicate":"主演","object_confidence":1.0,"subject":"张伟","disambiguation_applied":true,"confidence":0.95,"validation_status":"valid","validation_confidence":1.0,"object":"《红楼梦》","subject_confidence":1.0}],"disambiguation_applied":true,"disambiguation_timestamp":1751254357236,"validation_applied":true,"validation_timestamp":1751254357237,"invalid_relations":[],"conflicts_found":0,"validation_summary":{"conflict_count":0,"validation_rate":100.0,"valid_count":2,"total_validated":2,"invalid_count":0},"kg_mode":"enhanced","processed_at":1751254357237,"enhancement_applied":true}
2025-06-30 11:32:37.274 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 成功解析提取结果，包含 11 个主要字段: [triples, disambiguation_applied, disambiguation_timestamp, validation_applied, validation_timestamp, invalid_relations, conflicts_found, validation_summary, kg_mode, processed_at, enhancement_applied]
2025-06-30 11:32:37.274 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 应用知识图谱增强处理，模式: enhanced
2025-06-30 11:32:37.274 [TextExtract-1] INFO  c.datacenter.extract.service.EntityDisambiguator - 开始实体消歧义处理
2025-06-30 11:32:37.280 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.283 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.299 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.310 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.316 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.325 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.328 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0
2025-06-30 11:32:37.330 [TextExtract-1] INFO  c.datacenter.extract.service.EntityDisambiguator - 实体消歧义处理完成，处理了2个三元组
2025-06-30 11:32:37.330 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 处理 2 个三元组，包括实体和关系保存
2025-06-30 11:32:37.334 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.342 [TextExtract-1] DEBUG org.hibernate.SQL - insert into celebrity (baike,birthdate,celebrity_id,company,confidence_score,created_at,education,gender,`group`,name,nationality,position,profession,relatives,resume,spouse,updated_at,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-06-30 11:32:37.358 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功创建新人员: 张伟 (通过三元组提取)
2025-06-30 11:32:37.361 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.364 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 发现已存在实体: 演员，进行知识融合
2025-06-30 11:32:37.364 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 演员 信息已完整，无需更新
2025-06-30 11:32:37.373 [TextExtract-1] DEBUG org.hibernate.SQL - update celebrity set baike=?,birthdate=?,celebrity_id=?,company=?,confidence_score=?,created_at=?,education=?,gender=?,`group`=?,name=?,nationality=?,position=?,profession=?,relatives=?,resume=?,spouse=?,updated_at=?,version=? where id=?
2025-06-30 11:32:37.376 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.380 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.383 [TextExtract-1] DEBUG org.hibernate.SQL - insert into celebrity_celebrity (confidence_score,created_at,e_type,from_id,source_info,to_id,updated_at,version) values (?,?,?,?,?,?,?,?)
2025-06-30 11:32:37.387 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 保存人人关系: 张伟 -> 演员 [职业]
2025-06-30 11:32:37.387 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张伟 --[职业]--> 演员
2025-06-30 11:32:37.388 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.390 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 发现已存在实体: 张伟，进行知识融合
2025-06-30 11:32:37.390 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 人员 张伟 信息已完整，无需更新
2025-06-30 11:32:37.392 [TextExtract-1] DEBUG org.hibernate.SQL - update celebrity set baike=?,birthdate=?,celebrity_id=?,company=?,confidence_score=?,created_at=?,education=?,gender=?,`group`=?,name=?,nationality=?,position=?,profession=?,relatives=?,resume=?,spouse=?,updated_at=?,version=? where id=?
2025-06-30 11:32:37.394 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.397 [TextExtract-1] DEBUG org.hibernate.SQL - insert into celebrity (baike,birthdate,celebrity_id,company,confidence_score,created_at,education,gender,`group`,name,nationality,position,profession,relatives,resume,spouse,updated_at,version) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-06-30 11:32:37.401 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 成功创建新人员: 《红楼梦》 (通过三元组提取)
2025-06-30 11:32:37.403 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.408 [TextExtract-1] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.baike,c1_0.birthdate,c1_0.celebrity_id,c1_0.company,c1_0.confidence_score,c1_0.created_at,c1_0.education,c1_0.gender,c1_0.`group`,c1_0.name,c1_0.nationality,c1_0.position,c1_0.profession,c1_0.relatives,c1_0.resume,c1_0.spouse,c1_0.updated_at,c1_0.version from celebrity c1_0 where c1_0.name=?
2025-06-30 11:32:37.411 [TextExtract-1] DEBUG org.hibernate.SQL - insert into celebrity_celebrity (confidence_score,created_at,e_type,from_id,source_info,to_id,updated_at,version) values (?,?,?,?,?,?,?,?)
2025-06-30 11:32:37.413 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - ✅ 保存人人关系: 张伟 -> 《红楼梦》 [主演]
2025-06-30 11:32:37.413 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 🔗 关系记录: 张伟 --[主演]--> 《红楼梦》
2025-06-30 11:32:37.413 [TextExtract-1] INFO  com.datacenter.extract.service.DatabaseService - 🎉 成功保存提取数据到MySQL数据库 (模式: enhanced)
2025-06-30 11:32:37.417 [TextExtract-1] INFO  c.datacenter.extract.service.TextExtractionService - 异步文本提取完成，处理文本长度: 21, KG模式: enhanced
2025-06-30 11:33:31.960 [SpringApplicationShutdownHook] TRACE org.hibernate.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7f6137fb] for TypeConfiguration
2025-06-30 11:33:31.961 [SpringApplicationShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5bdfb157] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7f6137fb]
2025-06-30 11:33:31.963 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-30 11:33:31.972 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
