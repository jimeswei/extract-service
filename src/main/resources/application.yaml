# ========================================
# 智能文本提取服务 v4.0 - 文件架构配置
# 🔧 无数据库依赖 + 🚀 基于文件的处理架构
# ========================================

# 默认激活开发环境
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  main:
    allow-bean-definition-overriding: true
  application:
    name: extract-service-v4
    
  # Redis配置 - v4.0性能优化
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
          max-wait: 3000ms

# 通用服务器配置
server:
  port: ${SERVER_PORT:2701}

# 通用监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# 通用日志配置
logging:
  level:
    root: INFO
    com.datacenter.extract: INFO
    org.springframework: WARN
    reactor.netty: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"
  file:
    name: ${LOG_FILE:./log/extract_service.log}
    max-size: 100MB
    max-history: ${LOG_MAX_HISTORY:10}

# AI配置
extraction:
  ai:
    providers:
      deepseek:
        api-key: ${DEEPSEEK_API_KEY:sk-d91a0452893f43c596b5071c66cc2cd9}  # 必须通过环境变量设置
        url: ${DEEPSEEK_API_URL:https://api.deepseek.com/v1/chat/completions}
        base-timeout: ${AI_BASE_TIMEOUT:30s}
        max-timeout: ${AI_MAX_TIMEOUT:180s}
        retry-count: ${AI_RETRY_COUNT:3}
        max-concurrent-calls: ${AI_MAX_CONCURRENT:3}
        enable-metrics: true
        fallback-enabled: true
        error-handling:
          max-retries: ${AI_MAX_RETRIES:4}
          retry-delay: ${AI_RETRY_DELAY:2s}
          max-retry-delay: ${AI_MAX_RETRY_DELAY:30s}
          timeout-per-1000-chars: ${AI_TIMEOUT_PER_1000_CHARS:10s}

# 文件处理配置 - v4.0新增
file:
  processing:
    output-dir: ${OUTPUT_DIR:./out}
    template-dir: ${TEMPLATE_DIR:./src/main/resources/templates}
    batch-size: ${BATCH_SIZE:10}
    max-file-size: ${MAX_FILE_SIZE:50MB}
    cleanup-enabled: ${FILE_CLEANUP_ENABLED:true}
    cleanup-days: ${FILE_CLEANUP_DAYS:7}
    auto-create-dirs: true
    # 兼容配置
    output-directory: ${OUTPUT_DIR:./out}
    template-directory: ${TEMPLATE_DIR:./src/main/resources/templates}

# 缓存配置 - v4.0性能优化
cache:
  # 分层缓存策略: L1(Caffeine本地) + L2(Redis分布式)
  strategy: ${CACHE_STRATEGY:hybrid}  # hybrid, caffeine-only, redis-only
  
  caffeine:
    default:
      maximum-size: ${CACHE_DEFAULT_SIZE:1000}
      expire-after-write: 1h
    template:
      maximum-size: 100
      expire-after-write: 24h
    ai-result:
      maximum-size: 1000
      expire-after-write: 2h
      
  redis:
    enabled: ${REDIS_CACHE_ENABLED:true}
    ttl:
      ai-result: 7200s      # AI结果缓存2小时
      template: 86400s      # 模板缓存24小时
      text-chunk: 3600s     # 文本分片缓存1小时
      default: 1800s        # 默认缓存30分钟
      key-prefix: "extract:v4:"

# 模板配置 - v4.0核心
template:
  supported-types:
    - celebrity
    - celebrityCelebrity
    - work
    - event
    - triples
  hot-reload: ${TEMPLATE_HOT_RELOAD:true}
  validation-enabled: ${TEMPLATE_VALIDATION:true}

---
# ========================================
# 🚀 生产环境配置 (Profile: production)
# ========================================
spring:
  config:
    activate:
      on-profile: production

# 生产服务器配置
server:
  port: 2701
  servlet:
    context-path: /
  tomcat:
    threads:
      max: 200
      min-spare: 50
    max-connections: 10000
    accept-count: 100
    connection-timeout: 20000
    max-http-form-post-size: 50MB
    max-swallow-size: 50MB
    uri-encoding: UTF-8

# 生产监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,threaddump,heapdump,caches
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    distribution:
      percentiles:
        http.server.requests: 0.5,0.95,0.99
  prometheus:
    metrics:
      export:
        enabled: true

# 生产日志配置
logging:
  level:
    com.datacenter.extract: INFO
    org.springframework: WARN
    org.apache.tomcat: WARN
    reactor.netty: WARN
  file:
    name: logs/extract-service.log
    max-history: 30

# 生产AI配置
extraction:
  ai:
    providers:
      deepseek:
        timeout-per-1000-chars: 10s
        retry-count: 4
        retry-base-delay: 2s
        retry-max-delay: 30s
        max-concurrent-calls: 8
        
  # 文本处理配置
  processing:
    batch-size: 20
    parallel-threads: 8
    timeout: 120s
    max-text-length: 50000
    chunk-size: 2000
    chunk-overlap: 200
    
  # 网络配置优化
  webclient:
    connection-pool:
      max-connections: 50
      max-idle-time: 30s
      max-lifetime: 60s
      pending-acquire-timeout: 60s
    timeout:
      connect: 10s
      read: 180s
      write: 60s
    buffer:
      max-in-memory-size: 10MB

# 生产文件处理配置
file:
  processing:
    output-dir: /data/extract-service/out
    template-dir: /app/templates
    batch-size: 50
    max-file-size: 100MB
    cleanup-enabled: true
    cleanup-days: 30
    compression-enabled: true
    backup-enabled: true
    backup-dir: /data/extract-service/backup

# 生产缓存架构
cache:
  caffeine:
    # 主缓存
    l1-cache:
      maximum-size: 10000
      expire-after-write: 30m
      expire-after-access: 15m
      record-stats: true
    # AI结果缓存
    ai-result-cache:
      maximum-size: 5000
      expire-after-write: 2h
      expire-after-access: 1h
      record-stats: true
    # 模板缓存
    template-cache:
      maximum-size: 200
      expire-after-write: 24h
      expire-after-access: 12h
      record-stats: true

# 生产线程池配置
performance:
  threads:
    # 主业务线程池
    main-business:
      core-size: 10
      max-size: 50
      queue-capacity: 200
      keep-alive-seconds: 60
      thread-name-prefix: "main-biz-"
      rejection-policy: "CallerRunsPolicy"
    # AI处理线程池
    ai-processing:
      core-size: 8
      max-size: 20
      queue-capacity: 100
      keep-alive-seconds: 120
      thread-name-prefix: "ai-proc-"
      rejection-policy: "CallerRunsPolicy"
    # 文件处理线程池
    file-processing:
      core-size: 6
      max-size: 16
      queue-capacity: 80
      keep-alive-seconds: 60
      thread-name-prefix: "file-"
      rejection-policy: "CallerRunsPolicy"
      
  # 监控配置
  monitoring:
    enabled: true
    metrics-interval: 30s
    threshold-alerts: true
    health-check-interval: 10s
    task-timeout-minutes: 5
    cleanup-interval-minutes: 10
    stats-cache-minutes: 1
    alert-failure-rate: 20.0

# 生产安全配置
security:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    max-age: 3600

# 生产性能指标
metrics:
  performance:
    target-response-time-ms: 2000
    max-memory-usage-percent: 85
    min-success-rate-percent: 95
    alert-thresholds:
      response-time-p99: 5000
      error-rate: 5.0
      memory-usage: 90.0
      cache-hit-rate: 80.0

# MCP SSE 生产配置
ai:
  mcp:
    server:
      name: intelligent-extraction-service-v4-prod
      type: ASYNC
      version: 4.0.0
      enabled: true
      sse-endpoint: /sse
      sse-message-endpoint: /mcp/message
      request-timeout: 180000
      max-connections: 200
      capabilities:
        tool: true
        resource: true
        prompt: true
        completion: true
        template-based: true
        file-output: true

# 业务功能配置 - v4.0简化版
business:
  # 功能开关
  features:
    template-based-extraction: true
    batch-processing: true
    file-output: true
    
  # 处理模式配置
  processing-modes:
    standard:
      enabled: true
      description: "标准模板提取"
    batch:
      enabled: true
      description: "批量文件处理"
      
  # 质量控制
  quality-control:
    min-confidence-score: 0.7
    max-processing-time-ms: 300000
    enable-auto-retry: true
    file-validation: true

# 异步任务配置
async:
  task:
    core-pool-size: 10
    max-pool-size: 50
    queue-capacity: 500
    thread-name-prefix: "async-task-"

---
# ========================================
# 🔧 开发环境配置 (Profile: default)
# ========================================
spring:
  config:
    activate:
      on-profile: default

# 开发文件处理配置
file:
  processing:
    output-dir: ./out
    cleanup-enabled: false
    compression-enabled: false
    backup-enabled: false

# 开发模板配置
template:
  hot-reload: true
  validation-enabled: false
